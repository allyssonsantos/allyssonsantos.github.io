{"version":3,"file":"component---src-templates-blog-post-jsx-91f86938b7203d28c012.js","mappings":"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","sources":["webpack://allysson.me/./node_modules/@babel/runtime/helpers/construct.js","webpack://allysson.me/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://allysson.me/./node_modules/gatsby-plugin-mdx/index.js","webpack://allysson.me/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://allysson.me/./src/components/Posts/Comments.jsx","webpack://allysson.me/./src/templates/blog-post.jsx"],"sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React, { useRef, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport {\n  collection,\n  addDoc,\n  deleteDoc,\n  query,\n  where,\n  getDocs,\n  documentId,\n  serverTimestamp,\n} from 'firebase/firestore';\nimport { X } from 'react-feather';\nimport { Alert, Button } from '@frigobar/core';\nimport { useFade } from '@frigobar/animation';\n\nimport { Modal } from '@components/Layout';\nimport { Textarea } from '@components/Elements';\nimport rem from '@utils/rem';\n\nimport { db } from '../../services/firebase';\nimport { useAuth } from '../../contexts/AuthContext';\n\nconst Title = styled.h2`\n  margin-top: 40px;\n`;\n\nconst Form = styled.form`\n  margin-top: 24px;\n`;\n\nconst Comment = styled.article`\n  display: flex;\n  justify-content: space-between;\n\n  & + & {\n    margin-top: 22px;\n  }\n`;\n\nconst DeleteComment = styled.button(\n  ({ theme }) => css`\n    width: 24px;\n    height: 24px;\n\n    margin: 0;\n    padding: 0;\n\n    cursor: pointer;\n\n    border: none;\n    background-color: transparent;\n\n    svg {\n      stroke: ${theme.colors.neutral[900]};\n    }\n  `\n);\n\nconst StyledModal = styled(Modal)`\n  section {\n    min-height: unset;\n\n    border: none;\n  }\n\n  button svg {\n    stroke: ${(props) => props.theme.colors.neutral[900]};\n  }\n`;\n\nconst Author = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Name = styled.strong`\n  font-size: ${rem(16)};\n`;\n\nconst Datetime = styled.time`\n  margin-left: 4px;\n\n  &::before {\n    display: inline-block;\n\n    margin-right: 4px;\n\n    content: '·';\n  }\n`;\n\nconst Message = styled.p`\n  margin: 0;\n\n  white-space: pre-line;\n`;\n\nfunction AuthorInfo({ name, date }) {\n  const commentDate = date.toDate();\n\n  return (\n    <Author>\n      <Name>{name}</Name>{' '}\n      <Datetime>\n        {commentDate.toLocaleDateString(undefined, {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n        })}\n      </Datetime>\n    </Author>\n  );\n}\n\nAuthorInfo.propTypes = {\n  name: PropTypes.string.isRequired,\n  date: PropTypes.shape({\n    nanoseconds: PropTypes.number,\n    seconds: PropTypes.number,\n    toDate: PropTypes.func,\n  }).isRequired,\n};\n\nfunction commentsReducer(state, action) {\n  switch (action.type) {\n    case 'IDLE': {\n      return {\n        ...state,\n        status: 'IDLE',\n      };\n    }\n    case 'WRITTING': {\n      return {\n        ...state,\n        status: 'writting',\n        value: action.value,\n      };\n    }\n    case 'CREATED': {\n      return {\n        ...state,\n        status: 'created',\n      };\n    }\n    case 'FAILED': {\n      return {\n        ...state,\n        status: 'rejected',\n        action: action.action,\n      };\n    }\n    case 'SELECTED': {\n      return {\n        ...state,\n        selected: action.selected,\n      };\n    }\n    case 'RESET': {\n      return {\n        ...state,\n        selected: null,\n        value: '',\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nasync function deleteComment(id) {\n  const q = query(collection(db, 'comments'), where(documentId(), '==', id));\n  const querySnapshot = await getDocs(q);\n\n  querySnapshot.forEach(async (doc) => {\n    try {\n      await deleteDoc(doc.ref);\n      return true;\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  });\n}\n\nasync function createComment(currentUser, comment, slug) {\n  try {\n    const createdComment = await addDoc(collection(db, 'comments'), {\n      uid: currentUser.uid,\n      message: comment,\n      userName: currentUser.displayName,\n      date: new Date(),\n      timestamp: serverTimestamp(),\n      slug,\n    });\n\n    return createdComment;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction CommentsSection({ comments, slug }) {\n  const { currentUser } = useAuth();\n  const fieldRef = useRef(null);\n\n  const [{ animation: modalAnimation, state: modalState }, toggleModal] =\n    useFade({ startOnRender: false });\n\n  const [state, dispatch] = useReducer(commentsReducer, {\n    status: null,\n    action: null,\n    selected: null,\n    value: '',\n  });\n\n  const { status, action, selected, value } = state;\n\n  const handleOnChange = (event) => {\n    dispatch({ type: 'WRITTING', value: event.target.value });\n    fieldRef.current.style.height = `${fieldRef.current.scrollHeight}px`;\n  };\n\n  const handleForm = async (event) => {\n    event.preventDefault();\n\n    if (!value) {\n      return;\n    }\n\n    try {\n      await createComment(currentUser, value, slug);\n      dispatch({ type: 'CREATED' });\n    } catch (err) {\n      dispatch({ type: 'FAILED', action: 'criar' });\n    }\n\n    dispatch({ type: 'RESET' });\n  };\n\n  const handleSelect = (id) => () => {\n    toggleModal(true);\n    dispatch({ type: 'SELECTED', selected: id });\n  };\n\n  return (\n    <section>\n      <Title>Comentários</Title>\n      {comments.length\n        ? comments.map(({ id, userName, date, message, uid }) => (\n            <Comment key={id}>\n              <div>\n                <AuthorInfo name={userName} date={date} />\n                <Message>{message}</Message>\n              </div>\n              {uid === currentUser?.uid && (\n                <div>\n                  <DeleteComment\n                    title=\"Deletar comentário\"\n                    onClick={handleSelect(id)}\n                  >\n                    <X width={16} height={16} />\n                  </DeleteComment>\n                </div>\n              )}\n            </Comment>\n          ))\n        : 'Não há comentários nesse post.'}\n\n      {currentUser && (\n        <Form onSubmit={handleForm} aria-live=\"polite\">\n          {status === 'created' ? (\n            <Alert show type=\"success\">\n              Seu comentário foi adicionado!\n            </Alert>\n          ) : (\n            <Textarea\n              onChange={handleOnChange}\n              placeholder=\"Deixe um comentário\"\n              value={value}\n              ref={fieldRef}\n            />\n          )}\n        </Form>\n      )}\n\n      <Alert\n        show={status === 'rejected'}\n        closable\n        onClose={() => dispatch({ type: 'IDLE' })}\n        type=\"danger\"\n      >\n        Ocorreu algum erro inexperado ao {action} seu comentário. Tente\n        novamente daqui a pouco.\n      </Alert>\n\n      {modalState && (\n        <StyledModal\n          animation={modalAnimation}\n          onClose={() => toggleModal(false)}\n        >\n          <p>Você tem certeza que deseja deletar esse comentário?</p>\n\n          <Button\n            onClick={() => toggleModal(false)}\n            style={{ marginRight: 12 }}\n          >\n            Cancelar\n          </Button>\n          <Button\n            skin=\"danger\"\n            onClick={async () => {\n              deleteComment(selected);\n              toggleModal(false);\n            }}\n          >\n            Deletar\n          </Button>\n        </StyledModal>\n      )}\n    </section>\n  );\n}\n\nCommentsSection.propTypes = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      userName: PropTypes.string,\n      date: PropTypes.shape({\n        nanoseconds: PropTypes.number,\n        seconds: PropTypes.number,\n        toDate: PropTypes.func,\n      }).isRequired,\n      message: PropTypes.string,\n      uid: PropTypes.string,\n    })\n  ),\n  slug: PropTypes.string.isRequired,\n};\n\nCommentsSection.defaultProps = {\n  comments: [],\n};\n\nexport default CommentsSection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport {\n  collection,\n  query,\n  where,\n  orderBy,\n  onSnapshot,\n} from 'firebase/firestore';\n\nimport useTransition from '@utils/useTransition';\nimport { Title, Img, Description, Hr } from '@components/Elements';\nimport { TableOfContents, SEO } from '@components/Layout';\nimport { CommentsSection } from '@components/Posts';\n\nimport { db } from '../services/firebase';\n\nfunction Post({ data: { mdx: post }, transitionStatus }) {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    if (post.slug) {\n      const getComments = async () => {\n        const q = query(\n          collection(db, 'comments'),\n          where('slug', '==', post.slug),\n          orderBy('date', 'desc')\n        );\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n          const posts = querySnapshot.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n\n          setComments(posts);\n        });\n\n        return () => unsubscribe();\n      };\n\n      getComments();\n    }\n  }, [post.slug]);\n\n  const animation = useTransition(transitionStatus);\n  return (\n    <div animation={animation}>\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <Title>{post.frontmatter.title}</Title>\n      <Description>{post.frontmatter.description}</Description>\n      <time>Publicado em {post.frontmatter.date}</time>\n      {post.frontmatter.img && <Img src={`/${post.frontmatter.img}`} />}\n\n      <TableOfContents headings={post.headings} />\n\n      <MDXRenderer>{post.body}</MDXRenderer>\n      <Hr style={{ marginTop: 40 }} />\n      <CommentsSection slug={post.slug} comments={comments} />\n    </div>\n  );\n}\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      slug\n      frontmatter {\n        title\n        date(formatString: \"DD/MM/YYYY\", locale: \"pt-BR\")\n        description\n        img\n      }\n      body\n      headings(depth: h2) {\n        depth\n        value\n      }\n    }\n  }\n`;\n\nPost.propTypes = {\n  transitionStatus: PropTypes.oneOf([\n    'entering',\n    'entered',\n    'exiting',\n    'exited',\n  ]),\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        date: PropTypes.string,\n        img: PropTypes.string,\n      }),\n      slug: PropTypes.string,\n      excerpt: PropTypes.string,\n      headings: PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.string,\n        })\n      ).isRequired,\n      body: PropTypes.string,\n    }),\n    excerpt: PropTypes.string,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  transitionStatus: undefined,\n};\n"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","Title","styled","Form","Comment","DeleteComment","theme","css","colors","neutral","StyledModal","Modal","Author","Name","rem","Datetime","Message","AuthorInfo","name","commentDate","date","toDate","toLocaleDateString","undefined","year","month","day","commentsReducer","state","action","type","status","value","selected","Error","deleteComment","id","q","query","collection","db","where","documentId","getDocs","forEach","doc","deleteDoc","ref","Promise","reject","createComment","currentUser","comment","slug","addDoc","uid","message","userName","displayName","Date","timestamp","serverTimestamp","createdComment","CommentsSection","comments","useAuth","fieldRef","useRef","useFade","startOnRender","modalAnimation","animation","modalState","toggleModal","useReducer","dispatch","handleForm","event","preventDefault","handleSelect","length","map","title","onClick","width","height","onSubmit","Alert","show","onChange","target","current","style","scrollHeight","placeholder","closable","onClose","Button","marginRight","skin","defaultProps","Post","post","data","transitionStatus","useState","setComments","useEffect","getComments","orderBy","unsubscribe","onSnapshot","querySnapshot","posts","docs","useTransition","frontmatter","description","excerpt","img","src","headings","body","Hr","marginTop"],"sourceRoot":""}