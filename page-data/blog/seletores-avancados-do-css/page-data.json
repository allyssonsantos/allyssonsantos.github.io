{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/blog/seletores-avancados-do-css/",
    "result": {"data":{"site":{"siteMetadata":{"title":"allysson.me","author":"Allysson Santos"}},"mdx":{"id":"3494ecfe-9ab9-570e-b65f-5a223d72883e","excerpt":"O seletor \"~\" No css, serve para selecionar elementos depois de outros elementos, podemos\ntraduzir o  ~  para:  \"quero pegar todos elementos depois desse…","slug":"seletores-avancados-do-css/","frontmatter":{"title":"Seletores avançados do CSS","date":"03/04/2016","description":"Para que servem os seletores \"~\", \"+\", e \">\"","img":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Seletores avançados do CSS\",\n  \"slug\": \"/seletores-avancados-do-css\",\n  \"description\": \"Para que servem os seletores \\\"~\\\", \\\"+\\\", e \\\">\\\"\",\n  \"date\": \"2016-04-03\",\n  \"tags\": [\"CSS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"O seletor \\u201D~\\u201D\"), mdx(\"p\", null, \"No css, serve para selecionar elementos depois de outros elementos, podemos\\ntraduzir o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~\"), \" para: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201Cquero pegar todos elementos depois desse elemento\\u201D\"), \" por\\nexemplo, temos a seguinte marca\\xE7\\xE3o HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<ul>\\n  <li>Primeiro Item</li>\\n  <li>Segundo Item</li>\\n  <li>Terceiro Item</li>\\n  <li>Quarto Item</li>\\n</ul>\\n\")), mdx(\"p\", null, \"Queremos que a partir do segundo item, ele e todos os outros \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li's\"), \" tenham uma\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \" de 10px. Poderiamos fazer da seguinte maneira:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"li ~ li {\\n  margin-top: 10px;\\n}\\n\")), mdx(\"p\", null, \"Dessa forma, o primeiro elemento n\\xE3o teria o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \", mas o segundo e todos\\nos outros possuiriam essa propriedade.\"), mdx(\"p\", null, \"Outra forma de ler esse seletor: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201CQuero pegar todos \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"li's\"), \" que tenha outro\\n\", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"li\"), \" antes dele\\u201D\"), \", que no nosso caso, n\\xE3o pegaria o primeiro \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \", pois n\\xE3o h\\xE1\\nnenhum \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" que o precede.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Lembre-se bem\"), \", o \\u201D~\\u201D seleciona \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TODOS\"), \" os elementos depois de outro.\"), mdx(\"p\", null, \"Agora, um outro caso, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img src=\\\"imagem.jpg\\\" />\\n<div>\\n  <p>\\n    Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor\\n    sit amet.\\n  </p>\\n</div>\\n\")), mdx(\"p\", null, \"E queremos pegar todos os paragrafos depois da imagem. Poder\\xEDamos selecion\\xE1-lo\\nda seguinte maneira?\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"img ~ p\\n\")), mdx(\"p\", null, \"O nosso seletor de \\u201D~\\u201D iria funcionar nesse caso? A resposta \\xE9: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"n\\xE3o\"), \", esse\\nseletor n\\xE3o iria funcionar, pois quem est\\xE1 depois da imagem \\xE9 a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" e dentro\\nda \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" \\xE9 que est\\xE3o os paragrafos, nosso seletor \\u201D~\\u201D funciona apenas para\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"selecionar elementos irm\\xE3os\"), \", e n\\xE3o elementos filhos\\u2026\"), mdx(\"h2\", null, \"O seletor \\u201D+\\u201D\"), mdx(\"p\", null, \"No css, temos o \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"seletor \\u201D+\\u201D\"), \" que nos permite selecionar um elemento\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMEDIATAMENTE\"), \" depois de outro elemento, por exemplo, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img src=\\\"imagem.jpg\\\" />\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\\n<p>\\n  Temporibus, incidunt. Lorem ipsum dolor sit amet, consectetur adipisicing\\n  elit.\\n</p>\\n<p>\\n  Possimus, blanditiis. Lorem ipsum dolor sit amet, consectetur adipisicing\\n  elit.\\n</p>\\n<p>Fugiat, pariatur?</p>\\n\")), mdx(\"p\", null, \"Queremos que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apenas o primeiro paragrafo\"), \" seja em negrito. Podemos ent\\xE3o\\nselecion\\xE1-lo da seguinte maneira:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"img + p {\\n  font-weight: bold;\\n}\\n\")), mdx(\"p\", null, \"Lembre-se, o \\u201D+\\u201D pega o elemento \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMEDIATAMENTE\"), \" ap\\xF3s, ent\\xE3o, ele n\\xE3o\\nfuncionaria em um caso como esse, onde queremos selecionar o primeiro paragrafo\\nap\\xF3s a imagem:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img sc=\\\"imagem.jpg\\\" />\\n<div>\\n  <p>\\n    Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet,\\n    consectetur.\\n  </p>\\n</div>\\n\")), mdx(\"h2\", null, \"O seletor \\u201D>\\u201D\"), mdx(\"p\", null, \"Esse seletor nos permite selecionar elementos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PAI e FILHOS\"), \", n\\xE3o seleciona\\nelementos netos, apenas elementos filhos, por exemplo, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div>\\n  <p>Lorem ipsum.</p>\\n  <!-- filho de div -->\\n\\n  <blockquote>\\n    <p>Lorem ipsum.</p>\\n    <!-- neto de div -->\\n  </blockquote>\\n\\n  <p>Lorem ipsum.</p>\\n  <!-- filho de div -->\\n</div>\\n\")), mdx(\"p\", null, \"Queremos pegar os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" que s\\xE3o filhos da \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \", e n\\xE3o netos, como \\xE9 o caso do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \"\\nque est\\xE1 dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blockquote\"), \". Para pegar esses paragrafos que s\\xE3o filhos da\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" e aplicarmos um estilo de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text-decoration: underline;\"), \", podemos\\nselecion\\xE1-los da seguinte forma:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"div > p {\\n  text-decoration: underline;\\n}\\n\")), mdx(\"p\", null, \"Dessa maneira, todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" que s\\xE3o filhos da \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" receber\\xE3o o estilo.\"), mdx(\"h2\", null, \"Conclus\\xE3o\"), mdx(\"p\", null, \"Os seletores de elementos que vimos hoje nos d\\xE3o bastante poder, pois podemos\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"combin\\xE1-los\"), \" para pegar elementos espec\\xEDficos, como por exemplo,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias > h1 + p\"), \" esse seletor seleciona exatamente todos os paragrafos que\\nest\\xE3o imediatamente depois de todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \", que s\\xE3o filhos de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias\"), \".\\nBastante \\xFAtil quando n\\xE3o podemos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"alterar nada no HTML\"), \" ou temos acesso apenas\\naos arquivos de CSS.\"), mdx(\"p\", null, \"Por\\xE9m, sua \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"compreens\\xE3o \\xE9 bastante dif\\xEDcil\"), \", n\\xE3o conseguimos bater o olho\\nnesse seletor e j\\xE1 saber o que ele est\\xE1 selecionando. Outro ponto negativo \\xE9 a\\nsua \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"performance\"), \", o navegador l\\xEA os elementos selecionados da\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"direita para esquerda\"), \", ent\\xE3o ele teria um trabalho relativamente grande para\\ncapturar esses elementos, pois teria que achar todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" da p\\xE1gina, depois\\nselecionar apenas os que est\\xE3o imediatamente depois de um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \" e ainda\\nselecionar todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \", mas, pegar apenas os que s\\xE3o filhos de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias\"), \",\\nou seja, muito custoso para o navegador.\"), mdx(\"p\", null, \"Mas o ponto que mais me incomoda, \\xE9 que caso esse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \" venha a ser \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h2\"), \", nosso\\nc\\xF3digo CSS n\\xE3o funcionar\\xE1 mais. Nosso CSS \\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dependente da estrutura atual do HTML\"), \", caso ela mude, nosso CSS quebra.\"), mdx(\"p\", null, \"Ent\\xE3o, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"use com cuidado!\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"O seletor \"~\""},{"depth":2,"value":"O seletor \"+\""},{"depth":2,"value":"O seletor \">\""},{"depth":2,"value":"Conclusão"}]}},"pageContext":{"slug":"/seletores-avancados-do-css/"}},
    "staticQueryHashes": ["3128451518"]}