{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/blog/abertura-do-starwars-em-css/",
    "result": {"data":{"site":{"siteMetadata":{"title":"allysson.me","author":"Allysson Santos"}},"mdx":{"id":"1b1ef792-89ff-5408-9240-8a8b7692ad45","excerpt":"Hoje vamos aprender a fazer a  introdução do Starwars  (o logo\ndiminuindo e as letrinhas amarelas subindo)\n utilizando apenas HTML e CSS , com direito a…","frontmatter":{"title":"Abertura do StarWars em CSS.","date":"25/07/2016","description":"Criando a abertura do filme starwars utilizando apenas html e css","img":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Abertura do StarWars em CSS.\",\n  \"slug\": \"/abertura-do-starwars-em-css\",\n  \"description\": \"Criando a abertura do filme starwars utilizando apenas html e css\",\n  \"date\": \"2016-07-25\",\n  \"tags\": [\"CSS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hoje vamos aprender a fazer a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"introdu\\xE7\\xE3o do Starwars\"), \" (o logo\\ndiminuindo e as letrinhas amarelas subindo)\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"utilizando apenas HTML e CSS\"), \", com direito a musiquinha!\"), mdx(\"h2\", null, \"O que vamos utilizar?\"), mdx(\"p\", null, \"Vamos utilizar os seguintes arquivos: o \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars.svg\"\n  }, \"logo do starwars\"), \" e a\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars.mp3\"\n  }, \"trilha sonora\"), \" da nossa abertura.\"), mdx(\"p\", null, \"E tamb\\xE9m utilizaremos as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"seguintes t\\xE9cnicas\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"box-shadow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"transform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"translate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rotate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perspective\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"animation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"keyframes\")), mdx(\"p\", null, \"Se voc\\xEA quiser saber mais sobre o transform, tem um post explicando algumas\\ncoisas sobre ele aqui:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transform-css3\"\n  }, \"Transform do CSS3 - O que \\xE9 possivel fazer?\")), mdx(\"h2\", null, \"Come\\xE7ando com o HTML\"), mdx(\"p\", null, \"A estrutura do nosso \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTML\"), \" ser\\xE1 bem b\\xE1sica, vamos come\\xE7ar com\\numa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" vazia que ser\\xE1 a base para uma sombra\\nno topo de nossa pagina, para quando o texto atingir o topo de nossa p\\xE1gina,\\nele n\\xE3o desapare\\xE7a bruscamente. Vamos aproveitar e j\\xE1 linkar nosso futuro CSS\\ncom a tag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"link\"), \", vamos importar nosso logo,\\ncriar uma \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que ser\\xE1 nosso container, uma\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que conter\\xE1 todos nossos t\\xEDtulos e\\npar\\xE1grafos e por fim, nossa tag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"audio\"), \" que\\nimportaremos nossa m\\xFAsica.\"), mdx(\"p\", null, \"Nosso HTML fica assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <title>Starwars Intro</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\" />\\n  </head>\\n  <body>\\n    <div class=\\\"shadow\\\"></div>\\n    <img src=\\\"starwars.svg\\\" class=\\\"logo\\\" />\\n    <div class=\\\"container\\\">\\n      <div class=\\\"texto\\\">\\n        <h1 class=\\\"titulo\\\">Episode VII</h1>\\n        <h2 class=\\\"subtitulo\\\">The force awakens</h2>\\n        <p>\\n          It is a time of hope for the restored Republic. The last Imperial\\n          loyalists have been pushed back to the Outer Rim Territories.\\n        </p>\\n        <p>\\n          Chased across the galaxy by the Republic, the last remnants of the\\n          Galactic Empire have started raiding outposts in the outlying systems,\\n          desperate to replenish their dwindling supplies.\\n        </p>\\n        <p>\\n          With a large Republic fleet closing in on their position, the\\n          Imperials gather above the Outer Rim world of Tatooine, ready to make\\n          their last stand...\\n        </p>\\n      </div>\\n    </div>\\n    <audio autoplay>\\n      <source src=\\\"starwars.mp3\\\" type=\\\"audio/mpeg\\\" />\\n    </audio>\\n  </body>\\n</html>\\n\")), mdx(\"h2\", null, \"Come\\xE7ando com o CSS!\"), mdx(\"p\", null, \"Vamos come\\xE7ar estilizando nosso \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".container\"), \",\\ndando a ele uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"largura m\\xE1xima\"), \" de 1000px, centralizando na\\np\\xE1gina e um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position: relative\"), \" que servir\\xE1\\npara alinharmos nosso logo futuramente.\"), mdx(\"p\", null, \"Agora vamos estilizar o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"body\"), \" adicionando a cor\\npreta ao fundo, colocar um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overflow: hidden\"), \" para sumir com as scrollbars\\ne no meu caso, vou utilizar a fonte Helvetica em todos os textos e com a cor\\namarela (\", mdx(\"abbr\", {\n    title: \"Hexadecimal de uma cor com tom amarelado\"\n  }, \"#F2CB06\"), \").\\nAt\\xE9 agora, nosso css est\\xE1 assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"* {\\n  /* Vamos fazer um reset do padding e margin. */\\n  padding: 0;\\n  margin: 0;\\n}\\nbody {\\n  background: #000;\\n  color: #f2cb06;\\n  font-family: 'Helvetica-neue', 'Helvetica', sans-serif;\\n  overflow: hidden;\\n}\\n.container {\\n  max-width: 1000px;\\n  margin: 0 auto;\\n  position: relative;\\n}\\n\")), mdx(\"p\", null, \"Hora de estilizar a nossa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que ser\\xE1 a base\\npara nossa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sombra\"), \". vamos dar uma altura de 100\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \"\\n, a cor da div e da sombra ser\\xE1 a mesma cor do fundo, vamos dar um position\\nrelative para poder setar um z-index maior para que todos os elementos passem\\npor de baixo de nossa sombra.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".shadow {\\n  height: 100px;\\n  background-color: #000;\\n  box-shadow: 0px 10px 20px #000;\\n  position: relative;\\n  z-index: 100;\\n}\\n\")), mdx(\"p\", null, \"O motivo de colocarmos essa sombra, \\xE9 pra dar um efeito legal, veja o exemplo:\"), mdx(\"figure\", null, mdx(\"img\", {\n    src: \"/exemplo.png\",\n    alt: \"Exemplo da sombra\"\n  }), mdx(\"figcaption\", null, \"1. Exemplo da sombra sendo aplicada, e nosso texto sumindo suavemente.\")), mdx(\"h3\", null, \"Animando o logo!\"), mdx(\"p\", null, \"Agora sim come\\xE7a a m\\xE1gica, vamos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"adicionar nossas anima\\xE7\\xF5es\"), \".\\nPrimeiro precisamos adicionar o estilo do nosso logo, precisamos definir um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transform: scale(0)\"), \" para que quando a anima\\xE7\\xE3o\\ntermine, ele continue com o tamanho 0, e assim, n\\xE3o fique vis\\xEDvel. E tamb\\xE9m o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"translate(-50%, -50%)\"), \" e um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position: absolute;\"), \" para alinhar-mos o logo no\\ncentro da p\\xE1gina.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".logo {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: scale(0) translate(-50%, -50%);\\n}\\n\")), mdx(\"p\", null, \"Agora vamos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dar um nome para a nossa anima\\xE7\\xE3o\"), \" do logo\\nutilizando a propriedade\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name: logo;\"), \" vamos determinar a\\ndura\\xE7\\xE3o da nossa anima\\xE7\\xE3o, ela ter\\xE1 15 segundos\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-duration: 15s;\"), \" e determinar que ela\\nser\\xE1 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear\"), \", ou seja, ter\\xE1 a mesma velocidade do come\\xE7o ao\\nfim. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-timing-function: linear;\")), mdx(\"p\", null, \"Podemos adicionar os prefixos \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-webkit-\"), \" e\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-moz-\"), \" por quest\\xF5es de compatibilidade entre os\\nnavegadores.\"), mdx(\"p\", null, \"Nosso css est\\xE1 assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".logo {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: scale(0) translate(-50%, -50%);\\n  -moz-transform: scale(0) translate(-50%, -50%);\\n  transform: scale(0) translate(-50%, -50%);\\n  -webkit-animation-name: logo;\\n  -webkit-animation-duration: 15s;\\n  -webkit-animation-timing-function: linear;\\n  -moz-animation-name: logo;\\n  -moz-animation-duration: 15s;\\n  -moz-animation-timing-function: linear;\\n  animation-name: logo;\\n  animation-duration: 15s;\\n  animation-timing-function: linear;\\n}\\n\")), mdx(\"p\", null, \"At\\xE9 agora, nada acontece, precisamos adicionar nossos\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"keyframes!\"), \" a sintaxe \\xE9 a seguinte,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@keyframes nome_da_anima\\xE7\\xE3o\"), \" que foi definido\\nno \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name\")), mdx(\"p\", null, \"Vamos utilizar as\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"propriedades\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from\"), \" e\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" que ser\\xE3o declaradas dentro de nosso keyframe, onde determinamos quais\\npropriedades e valores que come\\xE7am no segundo 0 (from) de nossa anima\\xE7\\xE3o, e como\\nessas propriedades e valores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ir\\xE3o estar no t\\xE9rmino da nossa anima\\xE7\\xE3o\"), \", no\\ncaso, no segundo 15 (to).\"), mdx(\"p\", null, \"Vamos estilizar dentro do nosso \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from {\"), \", ou\\nseja, as propriedades definidas dentro dele, ser\\xE3o as propriedades iniciais de\\nnossa anima\\xE7\\xE3o. Vamos come\\xE7ar com nosso logo tendo 2x o seu tamanho original,\\nou seja, um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scale(2)\"), \".\"), mdx(\"p\", null, \"Agora o estilo dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to {\"), \" que ser\\xE3o as\\npropriedades finais de nossa anima\\xE7\\xE3o, ou seja, como nosso logo estar\\xE1 no\\nfinal. O tamanho dele ser\\xE1 0, ou seja, ele vai diminuir at\\xE9 sumir!\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scale(0);\"), \".\"), mdx(\"p\", null, \"Nosso keyframe no CSS, ficar\\xE1 assim (utilize os prefixos para compatibilidade,\\nn\\xE3o utilizarei para poupar c\\xF3digo):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@keyframes logo {\\n  from {\\n    transform: translate(-50%, -50%) scale(2);\\n    /* Precisamos repetir o translate, pois o keyframe sobescreve os valores da propriedade */\\n  }\\n  to {\\n    transform: translate(-50%, -50%) scale(0);\\n  }\\n}\\n\")), mdx(\"p\", null, \"Veja um exemplo de como est\\xE1 nossa anima\\xE7\\xE3o at\\xE9 agora:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars/starwars-exemplo-1\"\n  }, \"Exemplo\")), mdx(\"h3\", null, \"Animando o texto\"), mdx(\"p\", null, \"Primeiramente precisamos dar \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"estilo para o nosso texto\"), \",\\ncome\\xE7amos adicionando o b\\xE1sico, alinhamos todo nosso texto ao centro,\\nalteramos os nossos par\\xE1grafos para fonte de 70\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \",\\nnegrito, e uma \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \" de 70\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" para distanciar\\nde nosso t\\xEDtulo.\"), mdx(\"p\", null, \"Para o t\\xEDtulo vamos apenas aumentar a fonte para\\n85\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" e para nosso subt\\xEDtulo vamos deixar ele com o\\npeso da fonte \\u201Cnormal\\u201D, alterar a altura das linhas e deixar tudo em caixa alta.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n}\\n.texto p {\\n  font-size: 70px;\\n  font-weight: bold;\\n  text-shadow: 0px 0px 10px #000;\\n  margin-top: 70px;\\n  line-height: 1.4;\\n}\\n.titulo {\\n  font-size: 85px;\\n}\\n.subtitulo {\\n  font-weight: normal;\\n  text-transform: uppercase;\\n}\\n\")), mdx(\"p\", null, \"Agora come\\xE7amos com a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nossa anima\\xE7\\xE3o\"), \", primeira novidade,\\nvamos adicionar uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"perspectiva\"), \" ao nosso texto! ou seja,\\nvamos \\u201Cdistanciar\\u201D nosso par\\xE1grafo 800\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" da tela!\\nassim podemos dar uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sensa\\xE7\\xE3o de profundidade\"), \" ao nosso\\nelemento. Vamos tamb\\xE9m rotacionar nosso elemento no eixo X em 25 graus. O\\nestilo do nosso texto fica assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg);\\n}\\n\")), mdx(\"figure\", null, mdx(\"img\", {\n    src: \"/exemplo2.png\",\n    alt: \"Exemplo de texto rotacionado\"\n  }), mdx(\"figcaption\", null, \"2. Exemplo do texto com profundidade e rotacionado 25 graus no eixo X.\")), mdx(\"p\", null, \"Por\\xE9m, no come\\xE7o da nossa anima\\xE7\\xE3o\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apenas o logo deve estar vis\\xEDvel\"), \", nosso texto s\\xF3 come\\xE7ar\\xE1 a\\nser exibido quando o logo estiver quase sumido completamente, para isso, temos\\nque \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"esconder nosso texto\"), \", podemos desloca-lo utilizando o\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"translateY()\"), \", isso far\\xE1 nosso texto deslocar para baixo e\\nficar fora da p\\xE1gina, para depois subir dando aquele efeito legal!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg) translateY(40%);\\n}\\n\")), mdx(\"p\", null, \"Vamos come\\xE7ar com nossas anima\\xE7\\xF5es, come\\xE7amos adicionando nosso\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name: subir;\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-duration: 60s;\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-timing-function: linear;\"), \", at\\xE9 aqui,\\nnada de novo, nossa anima\\xE7\\xE3o se chama \\u201Csubir\\u201D (vamos utilizar esse nome no\\nkeyframe), ter\\xE1 60 segundos de dura\\xE7\\xE3o e sua velocidade ser\\xE1 linear, ou seja,\\na mesma velocidade durante a anima\\xE7\\xE3o inteira. (Adicione os prefixos para\\ncompatibilidade nos browsers).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg) translateY(40%);\\n  animation-name: subir;\\n  animation-duration: 60s;\\n  animation-timing-function: linear;\\n}\\n\")), mdx(\"p\", null, \"Agora vamos ao nosso \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"keyframe\"), \", ao inv\\xE9s de utilizar o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from {\"), \" e o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to {\"), \", vamos utilizar\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"porcentagens\"), \", vamos iniciar nossa anima\\xE7\\xE3o apenas quando a\\nanima\\xE7\\xE3o do logo estiver quase terminando, ou seja, vamos esperar um tempo\\npara nossa anima\\xE7\\xE3o do texto come\\xE7ar. Vamos iniciar em 15% e vamos at\\xE9 100%,\\nvamos esperar cerca de 9 segundos (15% de 60s) para iniciar a anima\\xE7\\xE3o do\\ntexto. Nesse keyframe vamos alterar apenas o translateY(), passando um valor\\nnegativo para nosso texto subir!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@keyframes subir {\\n  15% {\\n    transform: perspective(800px) rotateX(25deg) translateY(40%);\\n    /* Precisamos repertir a perspective e o rotate para manter a perspectiva e rota\\xE7\\xE3o. */\\n  }\\n  100% {\\n    transform: perspective(800px) rotateX(25deg) translateY(-220%);\\n    /* O translate -220% serve para deslocar o texto para cima! dando a sensa\\xE7\\xE3o de que o texto est\\xE1 subindo. */\\n  }\\n}\\n\")), mdx(\"p\", null, \"E est\\xE1 pronto nosso starwars!\"), mdx(\"a\", {\n    href: \"/starwars/starwars-exemplo-2\",\n    title: \"Exemplo da anima\\xE7\\xE3o final\"\n  }, \"Exemplo da anima\\xE7\\xE3o final\"), \".\", mdx(\"p\", null, \"Caso voc\\xEA queira colocar um outro texto, alterar tamanho da fonte, \\xE9 bem\\nprov\\xE1vel que voc\\xEA tenha que fazer altera\\xE7\\xF5es no rotate ou na perspectiva, fique\\natento!\"), mdx(\"p\", null, \"E segue o desafio de algu\\xE9m adaptar para funcionar bacana no mobile!\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"O que vamos utilizar?"},{"depth":2,"value":"Começando com o HTML"},{"depth":2,"value":"Começando com o CSS!"}]}},"pageContext":{"slug":"/abertura-do-starwars-em-css/"}},
    "staticQueryHashes": ["3128451518"]}