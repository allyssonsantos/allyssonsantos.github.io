{"componentChunkName":"component---src-templates-blog-post-js","path":"/abertura-do-starwars-em-css/","result":{"data":{"site":{"siteMetadata":{"title":"allysson.me","author":"Allysson Santos"}},"mdx":{"id":"1b1ef792-89ff-5408-9240-8a8b7692ad45","excerpt":"Hoje vamos aprender a fazer a  introdução do Starwars  (o logo\ndiminuindo e as letrinhas amarelas subindo)\n utilizando apenas HTML e CSS , com direito a…","frontmatter":{"title":"Abertura do StarWars em CSS.","date":"25/07/2016","description":"Criando a abertura do filme starwars utilizando apenas html e css"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Abertura do StarWars em CSS.\",\n  \"slug\": \"/abertura-do-starwars-em-css\",\n  \"description\": \"Criando a abertura do filme starwars utilizando apenas html e css\",\n  \"date\": \"2016-07-25\",\n  \"tags\": [\"CSS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hoje vamos aprender a fazer a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"introdu\\xE7\\xE3o do Starwars\"), \" (o logo\\ndiminuindo e as letrinhas amarelas subindo)\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"utilizando apenas HTML e CSS\"), \", com direito a musiquinha!\"), mdx(\"h2\", null, \"O que vamos utilizar?\"), mdx(\"p\", null, \"Vamos utilizar os seguintes arquivos: o \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars.svg\"\n  }, \"logo do starwars\"), \" e a\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars.mp3\"\n  }, \"trilha sonora\"), \" da nossa abertura.\"), mdx(\"p\", null, \"E tamb\\xE9m utilizaremos as \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"seguintes t\\xE9cnicas\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"box-shadow\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"transform:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"translate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rotate\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perspective\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"animation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"keyframes\")), mdx(\"p\", null, \"Se voc\\xEA quiser saber mais sobre o transform, tem um post explicando algumas\\ncoisas sobre ele aqui:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/transform-css3\"\n  }, \"Transform do CSS3 - O que \\xE9 possivel fazer?\")), mdx(\"h2\", null, \"Come\\xE7ando com o HTML\"), mdx(\"p\", null, \"A estrutura do nosso \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"HTML\"), \" ser\\xE1 bem b\\xE1sica, vamos come\\xE7ar com\\numa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" vazia que ser\\xE1 a base para uma sombra\\nno topo de nossa pagina, para quando o texto atingir o topo de nossa p\\xE1gina,\\nele n\\xE3o desapare\\xE7a bruscamente. Vamos aproveitar e j\\xE1 linkar nosso futuro CSS\\ncom a tag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"link\"), \", vamos importar nosso logo,\\ncriar uma \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que ser\\xE1 nosso container, uma\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que conter\\xE1 todos nossos t\\xEDtulos e\\npar\\xE1grafos e por fim, nossa tag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"audio\"), \" que\\nimportaremos nossa m\\xFAsica.\"), mdx(\"p\", null, \"Nosso HTML fica assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <title>Starwars Intro</title>\\n    <link rel=\\\"stylesheet\\\" href=\\\"style.css\\\" />\\n  </head>\\n  <body>\\n    <div class=\\\"shadow\\\"></div>\\n    <img src=\\\"starwars.svg\\\" class=\\\"logo\\\" />\\n    <div class=\\\"container\\\">\\n      <div class=\\\"texto\\\">\\n        <h1 class=\\\"titulo\\\">Episode VII</h1>\\n        <h2 class=\\\"subtitulo\\\">The force awakens</h2>\\n        <p>\\n          It is a time of hope for the restored Republic. The last Imperial\\n          loyalists have been pushed back to the Outer Rim Territories.\\n        </p>\\n        <p>\\n          Chased across the galaxy by the Republic, the last remnants of the\\n          Galactic Empire have started raiding outposts in the outlying systems,\\n          desperate to replenish their dwindling supplies.\\n        </p>\\n        <p>\\n          With a large Republic fleet closing in on their position, the\\n          Imperials gather above the Outer Rim world of Tatooine, ready to make\\n          their last stand...\\n        </p>\\n      </div>\\n    </div>\\n    <audio autoplay>\\n      <source src=\\\"starwars.mp3\\\" type=\\\"audio/mpeg\\\" />\\n    </audio>\\n  </body>\\n</html>\\n\")), mdx(\"h2\", null, \"Come\\xE7ando com o CSS!\"), mdx(\"p\", null, \"Vamos come\\xE7ar estilizando nosso \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".container\"), \",\\ndando a ele uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"largura m\\xE1xima\"), \" de 1000px, centralizando na\\np\\xE1gina e um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position: relative\"), \" que servir\\xE1\\npara alinharmos nosso logo futuramente.\"), mdx(\"p\", null, \"Agora vamos estilizar o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"body\"), \" adicionando a cor\\npreta ao fundo, colocar um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"overflow: hidden\"), \" para sumir com as scrollbars\\ne no meu caso, vou utilizar a fonte Helvetica em todos os textos e com a cor\\namarela (\", mdx(\"abbr\", {\n    title: \"Hexadecimal de uma cor com tom amarelado\"\n  }, \"#F2CB06\"), \").\\nAt\\xE9 agora, nosso css est\\xE1 assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"* {\\n  /* Vamos fazer um reset do padding e margin. */\\n  padding: 0;\\n  margin: 0;\\n}\\nbody {\\n  background: #000;\\n  color: #f2cb06;\\n  font-family: 'Helvetica-neue', 'Helvetica', sans-serif;\\n  overflow: hidden;\\n}\\n.container {\\n  max-width: 1000px;\\n  margin: 0 auto;\\n  position: relative;\\n}\\n\")), mdx(\"p\", null, \"Hora de estilizar a nossa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" que ser\\xE1 a base\\npara nossa \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sombra\"), \". vamos dar uma altura de 100\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \"\\n, a cor da div e da sombra ser\\xE1 a mesma cor do fundo, vamos dar um position\\nrelative para poder setar um z-index maior para que todos os elementos passem\\npor de baixo de nossa sombra.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".shadow {\\n  height: 100px;\\n  background-color: #000;\\n  box-shadow: 0px 10px 20px #000;\\n  position: relative;\\n  z-index: 100;\\n}\\n\")), mdx(\"p\", null, \"O motivo de colocarmos essa sombra, \\xE9 pra dar um efeito legal, veja o exemplo:\"), mdx(\"figure\", null, mdx(\"img\", {\n    src: \"/exemplo.png\",\n    alt: \"Exemplo da sombra\"\n  }), mdx(\"figcaption\", null, \"1. Exemplo da sombra sendo aplicada, e nosso texto sumindo suavemente.\")), mdx(\"h3\", null, \"Animando o logo!\"), mdx(\"p\", null, \"Agora sim come\\xE7a a m\\xE1gica, vamos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"adicionar nossas anima\\xE7\\xF5es\"), \".\\nPrimeiro precisamos adicionar o estilo do nosso logo, precisamos definir um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transform: scale(0)\"), \" para que quando a anima\\xE7\\xE3o\\ntermine, ele continue com o tamanho 0, e assim, n\\xE3o fique vis\\xEDvel. E tamb\\xE9m o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"translate(-50%, -50%)\"), \" e um\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"position: absolute;\"), \" para alinhar-mos o logo no\\ncentro da p\\xE1gina.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".logo {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: scale(0) translate(-50%, -50%);\\n}\\n\")), mdx(\"p\", null, \"Agora vamos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dar um nome para a nossa anima\\xE7\\xE3o\"), \" do logo\\nutilizando a propriedade\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name: logo;\"), \" vamos determinar a\\ndura\\xE7\\xE3o da nossa anima\\xE7\\xE3o, ela ter\\xE1 15 segundos\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-duration: 15s;\"), \" e determinar que ela\\nser\\xE1 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"linear\"), \", ou seja, ter\\xE1 a mesma velocidade do come\\xE7o ao\\nfim. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-timing-function: linear;\")), mdx(\"p\", null, \"Podemos adicionar os prefixos \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-webkit-\"), \" e\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-moz-\"), \" por quest\\xF5es de compatibilidade entre os\\nnavegadores.\"), mdx(\"p\", null, \"Nosso css est\\xE1 assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".logo {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: scale(0) translate(-50%, -50%);\\n  -moz-transform: scale(0) translate(-50%, -50%);\\n  transform: scale(0) translate(-50%, -50%);\\n  -webkit-animation-name: logo;\\n  -webkit-animation-duration: 15s;\\n  -webkit-animation-timing-function: linear;\\n  -moz-animation-name: logo;\\n  -moz-animation-duration: 15s;\\n  -moz-animation-timing-function: linear;\\n  animation-name: logo;\\n  animation-duration: 15s;\\n  animation-timing-function: linear;\\n}\\n\")), mdx(\"p\", null, \"At\\xE9 agora, nada acontece, precisamos adicionar nossos\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"keyframes!\"), \" a sintaxe \\xE9 a seguinte,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@keyframes nome_da_anima\\xE7\\xE3o\"), \" que foi definido\\nno \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name\")), mdx(\"p\", null, \"Vamos utilizar as\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"propriedades\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from\"), \" e\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to\"), \" que ser\\xE3o declaradas dentro de nosso keyframe, onde determinamos quais\\npropriedades e valores que come\\xE7am no segundo 0 (from) de nossa anima\\xE7\\xE3o, e como\\nessas propriedades e valores \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ir\\xE3o estar no t\\xE9rmino da nossa anima\\xE7\\xE3o\"), \", no\\ncaso, no segundo 15 (to).\"), mdx(\"p\", null, \"Vamos estilizar dentro do nosso \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from {\"), \", ou\\nseja, as propriedades definidas dentro dele, ser\\xE3o as propriedades iniciais de\\nnossa anima\\xE7\\xE3o. Vamos come\\xE7ar com nosso logo tendo 2x o seu tamanho original,\\nou seja, um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scale(2)\"), \".\"), mdx(\"p\", null, \"Agora o estilo dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to {\"), \" que ser\\xE3o as\\npropriedades finais de nossa anima\\xE7\\xE3o, ou seja, como nosso logo estar\\xE1 no\\nfinal. O tamanho dele ser\\xE1 0, ou seja, ele vai diminuir at\\xE9 sumir!\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"scale(0);\"), \".\"), mdx(\"p\", null, \"Nosso keyframe no CSS, ficar\\xE1 assim (utilize os prefixos para compatibilidade,\\nn\\xE3o utilizarei para poupar c\\xF3digo):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@keyframes logo {\\n  from {\\n    transform: translate(-50%, -50%) scale(2);\\n    /* Precisamos repetir o translate, pois o keyframe sobescreve os valores da propriedade */\\n  }\\n  to {\\n    transform: translate(-50%, -50%) scale(0);\\n  }\\n}\\n\")), mdx(\"p\", null, \"Veja um exemplo de como est\\xE1 nossa anima\\xE7\\xE3o at\\xE9 agora:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/starwars/starwars-exemplo-1\"\n  }, \"Exemplo\")), mdx(\"h3\", null, \"Animando o texto\"), mdx(\"p\", null, \"Primeiramente precisamos dar \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"estilo para o nosso texto\"), \",\\ncome\\xE7amos adicionando o b\\xE1sico, alinhamos todo nosso texto ao centro,\\nalteramos os nossos par\\xE1grafos para fonte de 70\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \",\\nnegrito, e uma \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \" de 70\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" para distanciar\\nde nosso t\\xEDtulo.\"), mdx(\"p\", null, \"Para o t\\xEDtulo vamos apenas aumentar a fonte para\\n85\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" e para nosso subt\\xEDtulo vamos deixar ele com o\\npeso da fonte \\u201Cnormal\\u201D, alterar a altura das linhas e deixar tudo em caixa alta.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n}\\n.texto p {\\n  font-size: 70px;\\n  font-weight: bold;\\n  text-shadow: 0px 0px 10px #000;\\n  margin-top: 70px;\\n  line-height: 1.4;\\n}\\n.titulo {\\n  font-size: 85px;\\n}\\n.subtitulo {\\n  font-weight: normal;\\n  text-transform: uppercase;\\n}\\n\")), mdx(\"p\", null, \"Agora come\\xE7amos com a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nossa anima\\xE7\\xE3o\"), \", primeira novidade,\\nvamos adicionar uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"perspectiva\"), \" ao nosso texto! ou seja,\\nvamos \\u201Cdistanciar\\u201D nosso par\\xE1grafo 800\", mdx(\"abbr\", {\n    title: \"pixels\"\n  }, \"px\"), \" da tela!\\nassim podemos dar uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sensa\\xE7\\xE3o de profundidade\"), \" ao nosso\\nelemento. Vamos tamb\\xE9m rotacionar nosso elemento no eixo X em 25 graus. O\\nestilo do nosso texto fica assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg);\\n}\\n\")), mdx(\"figure\", null, mdx(\"img\", {\n    src: \"/exemplo2.png\",\n    alt: \"Exemplo de texto rotacionado\"\n  }), mdx(\"figcaption\", null, \"2. Exemplo do texto com profundidade e rotacionado 25 graus no eixo X.\")), mdx(\"p\", null, \"Por\\xE9m, no come\\xE7o da nossa anima\\xE7\\xE3o\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apenas o logo deve estar vis\\xEDvel\"), \", nosso texto s\\xF3 come\\xE7ar\\xE1 a\\nser exibido quando o logo estiver quase sumido completamente, para isso, temos\\nque \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"esconder nosso texto\"), \", podemos desloca-lo utilizando o\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"translateY()\"), \", isso far\\xE1 nosso texto deslocar para baixo e\\nficar fora da p\\xE1gina, para depois subir dando aquele efeito legal!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg) translateY(40%);\\n}\\n\")), mdx(\"p\", null, \"Vamos come\\xE7ar com nossas anima\\xE7\\xF5es, come\\xE7amos adicionando nosso\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-name: subir;\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-duration: 60s;\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"animation-timing-function: linear;\"), \", at\\xE9 aqui,\\nnada de novo, nossa anima\\xE7\\xE3o se chama \\u201Csubir\\u201D (vamos utilizar esse nome no\\nkeyframe), ter\\xE1 60 segundos de dura\\xE7\\xE3o e sua velocidade ser\\xE1 linear, ou seja,\\na mesma velocidade durante a anima\\xE7\\xE3o inteira. (Adicione os prefixos para\\ncompatibilidade nos browsers).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \".texto {\\n  text-align: center;\\n  transform: perspective(800px) rotateX(25deg) translateY(40%);\\n  animation-name: subir;\\n  animation-duration: 60s;\\n  animation-timing-function: linear;\\n}\\n\")), mdx(\"p\", null, \"Agora vamos ao nosso \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"keyframe\"), \", ao inv\\xE9s de utilizar o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"from {\"), \" e o\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"to {\"), \", vamos utilizar\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"porcentagens\"), \", vamos iniciar nossa anima\\xE7\\xE3o apenas quando a\\nanima\\xE7\\xE3o do logo estiver quase terminando, ou seja, vamos esperar um tempo\\npara nossa anima\\xE7\\xE3o do texto come\\xE7ar. Vamos iniciar em 15% e vamos at\\xE9 100%,\\nvamos esperar cerca de 9 segundos (15% de 60s) para iniciar a anima\\xE7\\xE3o do\\ntexto. Nesse keyframe vamos alterar apenas o translateY(), passando um valor\\nnegativo para nosso texto subir!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"@keyframes subir {\\n  15% {\\n    transform: perspective(800px) rotateX(25deg) translateY(40%);\\n    /* Precisamos repertir a perspective e o rotate para manter a perspectiva e rota\\xE7\\xE3o. */\\n  }\\n  100% {\\n    transform: perspective(800px) rotateX(25deg) translateY(-220%);\\n    /* O translate -220% serve para deslocar o texto para cima! dando a sensa\\xE7\\xE3o de que o texto est\\xE1 subindo. */\\n  }\\n}\\n\")), mdx(\"p\", null, \"E est\\xE1 pronto nosso starwars!\"), mdx(\"a\", {\n    href: \"/starwars/starwars-exemplo-2\",\n    title: \"Exemplo da anima\\xE7\\xE3o final\"\n  }, \"Exemplo da anima\\xE7\\xE3o final\"), \".\", mdx(\"p\", null, \"Caso voc\\xEA queira colocar um outro texto, alterar tamanho da fonte, \\xE9 bem\\nprov\\xE1vel que voc\\xEA tenha que fazer altera\\xE7\\xF5es no rotate ou na perspectiva, fique\\natento!\"), mdx(\"p\", null, \"E segue o desafio de algu\\xE9m adaptar para funcionar bacana no mobile!\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/abertura-do-starwars-em-css/","previous":{"id":"3494ecfe-9ab9-570e-b65f-5a223d72883e","fields":{"slug":"/seletores-avancados-do-css/"},"frontmatter":{"title":"Seletores avançados do CSS"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Seletores avançados do CSS\",\n  \"slug\": \"/seletores-avancados-do-css\",\n  \"description\": \"Para que servem os seletores \\\"~\\\", \\\"+\\\", e \\\">\\\"\",\n  \"date\": \"2016-04-03\",\n  \"tags\": [\"CSS\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"O seletor \\u201D~\\u201D\"), mdx(\"p\", null, \"No css, serve para selecionar elementos depois de outros elementos, podemos\\ntraduzir o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~\"), \" para: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201Cquero pegar todos elementos depois desse elemento\\u201D\"), \" por\\nexemplo, temos a seguinte marca\\xE7\\xE3o HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<ul>\\n  <li>Primeiro Item</li>\\n  <li>Segundo Item</li>\\n  <li>Terceiro Item</li>\\n  <li>Quarto Item</li>\\n</ul>\\n\")), mdx(\"p\", null, \"Queremos que a partir do segundo item, ele e todos os outros \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li's\"), \" tenham uma\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \" de 10px. Poderiamos fazer da seguinte maneira:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"li ~ li {\\n  margin-top: 10px;\\n}\\n\")), mdx(\"p\", null, \"Dessa forma, o primeiro elemento n\\xE3o teria o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"margin-top\"), \", mas o segundo e todos\\nos outros possuiriam essa propriedade.\"), mdx(\"p\", null, \"Outra forma de ler esse seletor: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u201CQuero pegar todos \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"li's\"), \" que tenha outro\\n\", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"li\"), \" antes dele\\u201D\"), \", que no nosso caso, n\\xE3o pegaria o primeiro \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \", pois n\\xE3o h\\xE1\\nnenhum \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" que o precede.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Lembre-se bem\"), \", o \\u201D~\\u201D seleciona \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TODOS\"), \" os elementos depois de outro.\"), mdx(\"p\", null, \"Agora, um outro caso, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img src=\\\"imagem.jpg\\\" />\\n<div>\\n  <p>\\n    Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor\\n    sit amet.\\n  </p>\\n</div>\\n\")), mdx(\"p\", null, \"E queremos pegar todos os paragrafos depois da imagem. Poder\\xEDamos selecion\\xE1-lo\\nda seguinte maneira?\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"img ~ p\\n\")), mdx(\"p\", null, \"O nosso seletor de \\u201D~\\u201D iria funcionar nesse caso? A resposta \\xE9: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"n\\xE3o\"), \", esse\\nseletor n\\xE3o iria funcionar, pois quem est\\xE1 depois da imagem \\xE9 a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" e dentro\\nda \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" \\xE9 que est\\xE3o os paragrafos, nosso seletor \\u201D~\\u201D funciona apenas para\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"selecionar elementos irm\\xE3os\"), \", e n\\xE3o elementos filhos\\u2026\"), mdx(\"h2\", null, \"O seletor \\u201D+\\u201D\"), mdx(\"p\", null, \"No css, temos o \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"seletor \\u201D+\\u201D\"), \" que nos permite selecionar um elemento\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMEDIATAMENTE\"), \" depois de outro elemento, por exemplo, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img src=\\\"imagem.jpg\\\" />\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>\\n<p>\\n  Temporibus, incidunt. Lorem ipsum dolor sit amet, consectetur adipisicing\\n  elit.\\n</p>\\n<p>\\n  Possimus, blanditiis. Lorem ipsum dolor sit amet, consectetur adipisicing\\n  elit.\\n</p>\\n<p>Fugiat, pariatur?</p>\\n\")), mdx(\"p\", null, \"Queremos que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"apenas o primeiro paragrafo\"), \" seja em negrito. Podemos ent\\xE3o\\nselecion\\xE1-lo da seguinte maneira:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"img + p {\\n  font-weight: bold;\\n}\\n\")), mdx(\"p\", null, \"Lembre-se, o \\u201D+\\u201D pega o elemento \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"IMEDIATAMENTE\"), \" ap\\xF3s, ent\\xE3o, ele n\\xE3o\\nfuncionaria em um caso como esse, onde queremos selecionar o primeiro paragrafo\\nap\\xF3s a imagem:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<img sc=\\\"imagem.jpg\\\" />\\n<div>\\n  <p>\\n    Lorem ipsum dolor sit amet, consectetur. Lorem ipsum dolor sit amet,\\n    consectetur.\\n  </p>\\n</div>\\n\")), mdx(\"h2\", null, \"O seletor \\u201D>\\u201D\"), mdx(\"p\", null, \"Esse seletor nos permite selecionar elementos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PAI e FILHOS\"), \", n\\xE3o seleciona\\nelementos netos, apenas elementos filhos, por exemplo, temos o seguinte HTML:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<div>\\n  <p>Lorem ipsum.</p>\\n  <!-- filho de div -->\\n\\n  <blockquote>\\n    <p>Lorem ipsum.</p>\\n    <!-- neto de div -->\\n  </blockquote>\\n\\n  <p>Lorem ipsum.</p>\\n  <!-- filho de div -->\\n</div>\\n\")), mdx(\"p\", null, \"Queremos pegar os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" que s\\xE3o filhos da \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \", e n\\xE3o netos, como \\xE9 o caso do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \"\\nque est\\xE1 dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"blockquote\"), \". Para pegar esses paragrafos que s\\xE3o filhos da\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" e aplicarmos um estilo de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"text-decoration: underline;\"), \", podemos\\nselecion\\xE1-los da seguinte forma:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"div > p {\\n  text-decoration: underline;\\n}\\n\")), mdx(\"p\", null, \"Dessa maneira, todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" que s\\xE3o filhos da \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"div\"), \" receber\\xE3o o estilo.\"), mdx(\"h2\", null, \"Conclus\\xE3o\"), mdx(\"p\", null, \"Os seletores de elementos que vimos hoje nos d\\xE3o bastante poder, pois podemos\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"combin\\xE1-los\"), \" para pegar elementos espec\\xEDficos, como por exemplo,\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias > h1 + p\"), \" esse seletor seleciona exatamente todos os paragrafos que\\nest\\xE3o imediatamente depois de todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \", que s\\xE3o filhos de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias\"), \".\\nBastante \\xFAtil quando n\\xE3o podemos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"alterar nada no HTML\"), \" ou temos acesso apenas\\naos arquivos de CSS.\"), mdx(\"p\", null, \"Por\\xE9m, sua \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"compreens\\xE3o \\xE9 bastante dif\\xEDcil\"), \", n\\xE3o conseguimos bater o olho\\nnesse seletor e j\\xE1 saber o que ele est\\xE1 selecionando. Outro ponto negativo \\xE9 a\\nsua \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"performance\"), \", o navegador l\\xEA os elementos selecionados da\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"direita para esquerda\"), \", ent\\xE3o ele teria um trabalho relativamente grande para\\ncapturar esses elementos, pois teria que achar todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" da p\\xE1gina, depois\\nselecionar apenas os que est\\xE3o imediatamente depois de um \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \" e ainda\\nselecionar todos os \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \", mas, pegar apenas os que s\\xE3o filhos de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".noticias\"), \",\\nou seja, muito custoso para o navegador.\"), mdx(\"p\", null, \"Mas o ponto que mais me incomoda, \\xE9 que caso esse \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h1\"), \" venha a ser \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"h2\"), \", nosso\\nc\\xF3digo CSS n\\xE3o funcionar\\xE1 mais. Nosso CSS \\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"dependente da estrutura atual do HTML\"), \", caso ela mude, nosso CSS quebra.\"), mdx(\"p\", null, \"Ent\\xE3o, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"use com cuidado!\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"7c9153ab-6780-5b4a-b0bb-9c08d1c45002","fields":{"slug":"/arrow-functions/"},"frontmatter":{"title":"Arrow Functions"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Arrow Functions\",\n  \"slug\": \"/arrow-functions\",\n  \"description\": \"Qual a diferença de arrow function para uma function \\\"padrão\\\"?\",\n  \"date\": \"2016-12-18\",\n  \"tags\": [\"Javascript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Introdu\\xE7\\xE3o\"), mdx(\"p\", null, \"Arrow function \\xE9 uma nova forma de se escrever \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"fun\\xE7\\xF5es anonimas\"), \", vamos\\nentender sua sintaxe e como funciona o seu valor de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this\"), \".\"), mdx(\"h3\", null, \"Sintaxe\"), mdx(\"p\", null, \"Uma fun\\xE7\\xE3o anonima no ES5 era assim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const countries = ['Germany', 'United States'];\\n\\nconst go = countries.map(function(country) {\\n  return 'One day I will go to ' + country;\\n});\\n\\nconsole.log(go);\\n\\n> [\\\"One day I will go to Germany\\\", \\\"One day I will go to United States\\\"]\\n\")), mdx(\"p\", null, \"Com as arrows functions, podemos simplifica-las das seguintes formas:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const contries = ['Germany', 'United States'];\\nconst go = countries.map(country => {\\n  return 'One day I will go to ' + country;\\n}); // Podemos tirar a palavra function e adicionar uma => a frente dos () dos parametros.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const go = countries.map(country => {\\n  return 'One day I will go to ' + country;\\n}); // Caso a fun\\xE7\\xE3o tenha apenas um par\\xE2metro, podemos retirar o seus par\\xEAnteses.\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const go = countries.map(country => 'One day I will go to ' + country);\\n/* Caso a fun\\xE7\\xE3o tenha apenas um par\\xE2metro e retorne logo na primeira linha,\\npodemos escrever sem as chaves e sem a palavra return */\\n\\n/* Podemos usar tamb\\xE9m as template strings, ficando assim: */\\n\\nconst go = countries.map(country => `One day I will go to ${country}`);\\n\")), mdx(\"p\", null, \"Recapitulando:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Podemos tirar a palavra function e adicionar uma seta \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"=>\"), \" em frente os\\npar\\xEAnteses dos par\\xE2metros.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Se a sua fun\\xE7\\xE3o anonima tiver apenas um par\\xE2metro, pode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"retirar\"), \" seus\\npar\\xEAnteses.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Se a fun\\xE7\\xE3o n\\xE3o tiver par\\xE2metros, podemos deixar \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"()\"), \" vazio mesmo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Se a fun\\xE7\\xE3o der um \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"return\"), \" na primeira linha, podemos escrever apenas em uma\\nlinha, sem chaves e sem a palavra \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"return\"), \".\")), mdx(\"h3\", null, \"Objeto this\"), mdx(\"p\", null, \"O \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"this\"), \" dentro de uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"arrow function\"), \" se comporta de uma maneira\\ndiferente da que estamos acostumados, primeiro, vamos analisar um c\\xF3digo\\njs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sem uso de arrow functions\"), \".\"), mdx(\"p\", null, \"Imagine que temos o seguinte HTML e JS:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<html>\\n  <body>\\n    <button id=\\\"btn\\\">Click!</button>\\n  </body>\\n  <script>\\n    const btn = document.getElementById('btn');\\n\\n    btn.addEventListener('click', function() {\\n      console.log(this);\\n    });\\n  </script>\\n</html>\\n\")), mdx(\"p\", null, \"Na fun\\xE7\\xE3o acima, ao clicar no bot\\xE3o com \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id='btn'\"), \" iremos logar o valor de\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"this\"), \", que nesse caso \\xE9 o pr\\xF3prio bot\\xE3o. Teremos como sa\\xEDda essa resposta:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<button id=\\\"btn\\\">Click</button>\\n\")), mdx(\"p\", null, \"Se esse mesmo c\\xF3digo for escrito com \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"arrow function\"), \" o resultado n\\xE3o ser\\xE1 o\\nmesmo, pois o valor de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this\"), \" n\\xE3o est\\xE1 referenciado ao bot\\xE3o que est\\xE1\\nacontecendo a a\\xE7\\xE3o, ele est\\xE1 referenciado a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"todo o contexto\"), \" que a fun\\xE7\\xE3o\\nest\\xE1 inserida, no nosso caso, o contexto \\xE9 a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"window\"), \".\"), mdx(\"p\", null, \"Ao clicar no bot\\xE3o com uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"arrow function\"), \", teremos o seguinte retorno:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<html>\\n  <body>\\n    <button id=\\\"btn\\\">Click!</button>\\n  </body>\\n  <script>\\n    const btn = document.getElementById('btn');\\n\\n    btn.addEventListener('click', () => {\\n      // mudan\\xE7a aqui /\\\\\\n      console.log(this);\\n    });\\n  </script>\\n</html>\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"> Window {speechSynthesis: SpeechSynthesis, caches: CacheStorage, localStorage: Storage\\n> sessionStorage: Storage, webkitStorageInfo: DeprecatedStorageInfo\\u2026}\\n\")), mdx(\"p\", null, \"Agora um outro exemplo para tentar fixar melhor, temos a seguinte estrutura sem\\no uso de arrow functions ainda:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<html>\\n  <body>\\n    <button id=\\\"btn\\\">Click!</button>\\n  </body>\\n  <script>\\n    const pessoa = {\\n      nome: 'Allysson',\\n      idade: '22',\\n\\n      apresentar: function() {\\n        return `Meu nome e ${this.nome} e eu tenho ${this.idade} anos`;\\n      },\\n\\n      falar: function() {\\n        const self = this;\\n        window.setTimeout(function() {\\n          console.log(self.apresentar());\\n        }, 500);\\n      },\\n    };\\n\\n    const btn = document.getElementById('btn');\\n\\n    btn.addEventListener('click', function() {\\n      pessoa.falar();\\n    });\\n  </script>\\n</html>\\n\")), mdx(\"p\", null, \"Repare que na linha 15 precisamos \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"guardar o valor de this\"), \" na vari\\xE1vel \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"self\"), \"\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"(nesse moemento o valor de this \\xE9 o pr\\xF3prio objeto pessoa)\"), \", se us\\xE1ssemos\\ndiretamente o \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"this\"), \" dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"console.log\"), \" que est\\xE1 no \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setTimeout\"), \"\\nacabar\\xEDamos nos refer\\xEAnciando a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"window\"), \", e dentro da \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"window\"), \" n\\xE3o possu\\xEDmos\\na fun\\xE7\\xE3o falar, ela est\\xE1 dentro de \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pessoa\"), \".\"), mdx(\"p\", null, \"Executando esse JS temos o seguinte log no console:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"> Meu nome e Allysson e eu tenho 22 anos\\n\")), mdx(\"h4\", null, \"Usando arrow functions\"), mdx(\"p\", null, \"Agora se n\\xF3s mudarmos a fun\\xE7\\xE3o anonima que est\\xE1 dentro do \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"setTimeout\"), \" para\\nutilizar \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"arrow function\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"n\\xE3o precisaremos guardar o valor de this\"), \" dentro\\nde \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"self\"), \", pois como \\xE9 uma \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"arrow function\"), \", o contexto de this j\\xE1 \\xE9 o objeto\\npessoa, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"o escopo se mant\\xE9m o mesmo\"), \"!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<html>\\n  <body>\\n    <button id=\\\"btn\\\">Click!</button>\\n  </body>\\n  <script>\\n    const pessoa = {\\n      nome: 'Allysson',\\n      idade: '22',\\n\\n      apresentar: function() {\\n        return `Meu nome e ${this.nome} e eu tenho ${this.idade} anos`;\\n      },\\n\\n      falar: function() {\\n        window.setTimeout(() => {\\n          console.log(this.apresentar());\\n        }, 500);\\n      },\\n    };\\n\\n    const btn = document.getElementById('btn');\\n\\n    btn.addEventListener('click', function() {\\n      pessoa.falar();\\n    });\\n  </script>\\n</html>\\n\")), mdx(\"p\", null, \"Temos como retorno o mesmo que na fun\\xE7\\xE3o anterior, mas agora \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sem precisar do\\nself\"), \"!\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"> Meu nome e Allysson e eu tenho 22 anos\\n\")), mdx(\"h2\", null, \"Conclus\\xE3o\"), mdx(\"p\", null, \"O valor de this com arrow functions pode gerar grandes dores de cabe\\xE7a, esteja\\natento, fa\\xE7a testes, pratique criando fun\\xE7\\xF5es anonimas convencionais e logue o\\nvalor de this, fa\\xE7a essa mesma fun\\xE7\\xE3o utilizando arrow functions e compare o\\nvalor de this, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"saiba que o escopo se mantem o mesmo de onde a arrow function\\nfoi criada\"), \"!\"), mdx(\"p\", null, \"Ela \\xE9 muito boa para ocasi\\xF5es como no objeto pessoa, mas n\\xE3o parece ser muito\\ninteressante quando queremos adicionar um event listener em algum elemento, pois\\nestariamos alterando o escopo, o contexto. Nosso event listener n\\xE3o teria o\\nefeito desejado.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"staticQueryHashes":["3128451518","3128451518"]}