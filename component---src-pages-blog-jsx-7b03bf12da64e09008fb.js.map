{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["Blog","data","siteTitle","site","siteMetadata","title","posts","allMdx","edges","useState","filteredTerm","setFilteredTerm","filteredPosts","filter","node","matchedTags","frontmatter","tags","tag","toLowerCase","includes","length","description","keywords","as","$textAlign","$size","lh","$mb","placeholder","onChange","e","target","value","$mt","Boolean","map","fields","slug","key","to","date","$color"],"mappings":"6FAAA,oEA+EeA,UAzEF,SAAC,GAOP,IAAD,IANJC,KAE2BC,EAIvB,EALFC,KACEC,aAAgBC,MAEDC,EAEf,EAFFC,OAAUC,MAGZ,EAAwCC,mBAAS,IAA1CC,EAAP,KAAqBC,EAArB,KAGMC,EAAgBN,EAAMO,QAAO,YAAe,IAAZC,EAAW,EAAXA,KAC9BC,EAAcD,EAAKE,YAAYC,KAAKJ,QAAO,SAAAK,GAAG,OAClDA,EAAIC,cAAcC,SAASV,MAC3BW,OACF,OACEP,EAAKE,YAAYX,MAAMc,cAAcC,SAASV,IAC9CK,GACAD,EAAKE,YAAYM,YAAYH,cAAcC,SAASV,MAIxD,OACE,kBAAC,IAAD,CAAQL,MAAOH,GACb,kBAAC,IAAD,CACEG,MAAM,iBACNkB,SAAU,CACR,OACA,SACA,aACA,QACA,oBACA,gBACA,gBAGJ,kBAAC,IAAD,CAAOC,GAAG,KAAKC,WAAW,OAAOC,MAAM,WAAvC,QAGA,kBAAC,IAAD,CAAKF,GAAG,IAAIG,GAAG,OAAOD,MAAM,OAAOE,IAAK,IAAxC,0IAIA,kBAAC,IAAD,CACEC,YAAY,4CACZC,SApCS,SAAAC,GAAC,OAAIpB,EAAgBoB,EAAEC,OAAOC,MAAMd,kBAsC/C,kBAAC,IAAD,CAAOK,GAAG,KAAKC,WAAW,OAAOC,MAAM,UAAUQ,IAAK,GAAIN,IAAK,IAA/D,WACWO,QAAQvB,EAAcS,SAAW,wCAAIT,EAAcS,OAAlB,MAE3Cc,QAAQvB,EAAcS,QACrBT,EAAcwB,KAAI,YAAe,IAAZtB,EAAW,EAAXA,KACbT,EAAQS,EAAKE,YAAYX,OAASS,EAAKuB,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,IAAKzB,EAAKuB,OAAOC,KAAME,GAAI1B,EAAKuB,OAAOC,MAC3C,kBAAC,IAAD,CACErB,KAAMH,EAAKE,YAAYC,KACvBZ,MAAOA,EACPiB,YAAaR,EAAKE,YAAYM,YAC9BmB,KAAM3B,EAAKE,YAAYyB,WAM/B,kBAAC,IAAD,CAAKf,MAAM,UAAUgB,OAAO,WAA5B","file":"component---src-pages-blog-jsx-7b03bf12da64e09008fb.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport { Layout, Title, Card, Box, Input } from '../components';\nimport SEO from '../components/seo';\n\nconst Blog = ({\n  data: {\n    site: {\n      siteMetadata: { title: siteTitle },\n    },\n    allMdx: { edges: posts },\n  },\n}) => {\n  const [filteredTerm, setFilteredTerm] = useState('');\n  const filter = e => setFilteredTerm(e.target.value.toLowerCase());\n\n  const filteredPosts = posts.filter(({ node }) => {\n    const matchedTags = node.frontmatter.tags.filter(tag =>\n      tag.toLowerCase().includes(filteredTerm)\n    ).length;\n    return (\n      node.frontmatter.title.toLowerCase().includes(filteredTerm) ||\n      matchedTags ||\n      node.frontmatter.description.toLowerCase().includes(filteredTerm)\n    );\n  });\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Todos os posts\"\n        keywords={[\n          'blog',\n          'gatsby',\n          'javascript',\n          'react',\n          'styled-components',\n          'design-system',\n          'components',\n        ]}\n      />\n      <Title as=\"h2\" $textAlign=\"left\" $size=\"2.25rem\">\n        Blog\n      </Title>\n      <Box as=\"p\" lh=\"25px\" $size=\"1rem\" $mb={24}>\n        Aqui você vai explicar quais são os assuntos que você gosta de estudar e\n        escrever. É importante para setar as expectativas do usuário.\n      </Box>\n      <Input\n        placeholder=\"buscar artigo, categoria ou palavra chave\"\n        onChange={filter}\n      />\n      <Title as=\"h2\" $textAlign=\"left\" $size=\"1.75rem\" $mt={50} $mb={12}>\n        Artigos {Boolean(filteredPosts.length) && <>({filteredPosts.length})</>}\n      </Title>\n      {Boolean(filteredPosts.length) ? (\n        filteredPosts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <Link key={node.fields.slug} to={node.fields.slug}>\n              <Card\n                tags={node.frontmatter.tags}\n                title={title}\n                description={node.frontmatter.description}\n                date={node.frontmatter.date}\n              />\n            </Link>\n          );\n        })\n      ) : (\n        <Box $size=\"1.25rem\" $color=\"#797979\">\n          Ops, com essa busca não encontrei nenhum artigo relacionado.\n        </Box>\n      )}\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YYYY\", locale: \"pt-BR\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}