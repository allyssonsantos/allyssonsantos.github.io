{"version":3,"file":"component---src-templates-blog-post-jsx-3e9b47d52e3b29bd583d.js","mappings":"mGAAA,IAAIA,EAAiB,EAAQ,OAEzBC,EAA2B,EAAQ,OAEvC,SAASC,EAAWC,EAAQC,EAAMC,GAiBhC,OAhBIJ,KACFK,EAAOC,QAAUL,EAAaM,QAAQC,UACtCH,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,IAExEJ,EAAOC,QAAUL,EAAa,SAAoBC,EAAQC,EAAMC,GAC9D,IAAIM,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGP,GAChB,IACIU,EAAW,IADGC,SAASC,KAAKH,MAAMV,EAAQQ,IAG9C,OADIN,GAAOL,EAAec,EAAUT,EAAMY,WACnCH,GAGTR,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,GAGnER,EAAWW,MAAM,KAAMK,WAGhCZ,EAAOC,QAAUL,EACjBI,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,G,kBCZxEJ,EAAOC,QAbP,WACE,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUU,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,QAAQJ,UAAUK,QAAQC,KAAKf,QAAQC,UAAUY,QAAS,IAAI,iBACvD,EACP,MAAOG,GACP,OAAO,IAKXlB,EAAOC,QAAiB,QAAID,EAAOC,QAASD,EAAOC,QAAQG,YAAa,G,sBCRxE,IAAMe,EAAcC,EAApB,OAEApB,EAAAA,QAAiB,CACfmB,YADFnB,I,0pBCRA,IAAMqB,EAAQD,EAAd,OACQE,EAAQF,EAAhB,WACQG,EAAgBH,EAAxB,mBAEApB,EAAA,QAAiB,SAAqB,GACpCwB,IAAAA,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACGC,EACF,OACKC,EAAWJ,EAAjB,GAGMK,EAAMP,EAAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMQ,EAAS,GAGbR,MAHa,EAIbC,IAJa,GAAf,GAQMQ,EAAOC,OAAAA,KAAb,GACMC,EAASF,EAAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,WAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOJ,EAAAA,cAAAA,EAAAA,EAAAA,GAAP,M,+GCvBF,SAASc,EAAT,GAA0D,IAA7BC,EAA4B,EAAzCC,KAAQf,IAAagB,EAAoB,EAApBA,iBAC7BC,GAAYC,EAAAA,EAAAA,GAAcF,GAEhC,OACE,yBAAgBC,GACd,gBAAC,KAAD,CAAKE,MAAOL,EAAKM,YAAYD,MAAOE,YAAaP,EAAKQ,UACtD,gBAAC,KAAD,KAAQR,EAAKM,YAAYD,OACzB,gBAAC,KAAD,KAAcL,EAAKM,YAAYC,aAC/B,4CAAoBP,EAAKM,YAAYG,MACpCT,EAAKM,YAAYI,KAAO,gBAAC,KAAD,CAAKC,IAAG,IAAMX,EAAKM,YAAYI,MAExD,gBAAC,KAAD,CAAiBE,SAAUZ,EAAKY,WAEhC,gBAAC,EAAA7B,YAAD,KAAciB,EAAKa,OAKzB,YA4BAd,EAAKe,aAAe,CAClBC,iBAAaC,GA+BfjB,EAAKe,aAAe,CAClBZ,sBAAkBc,GADpB","sources":["webpack://allysson.me/./node_modules/@babel/runtime/helpers/construct.js","webpack://allysson.me/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://allysson.me/./node_modules/gatsby-plugin-mdx/index.js","webpack://allysson.me/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://allysson.me/./src/templates/blog-post.jsx"],"sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\n\nimport useTransition from '@utils/useTransition';\nimport { Title, Img, Description } from '@components/Elements';\nimport { TableOfContents, SEO } from '@components/Layout';\n\nfunction Post({ data: { mdx: post }, transitionStatus }) {\n  const animation = useTransition(transitionStatus);\n\n  return (\n    <div animation={animation}>\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <Title>{post.frontmatter.title}</Title>\n      <Description>{post.frontmatter.description}</Description>\n      <time>Publicado em {post.frontmatter.date}</time>\n      {post.frontmatter.img && <Img src={`/${post.frontmatter.img}`} />}\n\n      <TableOfContents headings={post.headings} />\n\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </div>\n  );\n}\n\nexport default Post;\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"DD/MM/YYYY\", locale: \"pt-BR\")\n        description\n        img\n      }\n      body\n      headings(depth: h2) {\n        depth\n        value\n      }\n    }\n  }\n`;\n\nPost.defaultProps = {\n  pageContext: undefined,\n};\n\nPost.propTypes = {\n  transitionStatus: PropTypes.oneOf([\n    'entering',\n    'entered',\n    'exiting',\n    'exited',\n  ]),\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n        date: PropTypes.string,\n        img: PropTypes.string,\n        slug: PropTypes.string,\n      }),\n      excerpt: PropTypes.string,\n      headings: PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.string,\n        })\n      ).isRequired,\n      body: PropTypes.string,\n    }),\n    excerpt: PropTypes.string,\n  }).isRequired,\n};\n\nPost.defaultProps = {\n  transitionStatus: undefined,\n};\n"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","__esModule","a","push","apply","instance","Function","bind","prototype","arguments","sham","Proxy","Boolean","valueOf","call","e","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","Object","values","key","fn","Post","post","data","transitionStatus","animation","useTransition","title","frontmatter","description","excerpt","date","img","src","headings","body","defaultProps","pageContext","undefined"],"sourceRoot":""}