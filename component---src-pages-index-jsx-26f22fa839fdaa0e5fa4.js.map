{"version":3,"sources":["webpack:///./src/data/projects.js","webpack:///./src/pages/index.jsx"],"names":["projects","name","description","forks","stars","homepage","Wrapper","styled","div","Repos","sizes","theme","css","breakpoints","md","pageQuery","Home","location","data","siteTitle","site","siteMetadata","title","posts","allMdx","edges","full","keywords","as","map","node","frontmatter","fields","slug","key","to","tags","date","Link","personalProjects","repo","logo","toLowerCase","link"],"mappings":"6LAiCeA,EAjCE,CACf,CACEC,KAAM,UACNC,YAAa,2CACbC,MAAO,GACPC,MAAO,KACPC,SAAU,sCAEZ,CACEJ,KAAM,OACNC,YACE,iIACFC,MAAO,EACPC,MAAO,GACPC,SAAU,mCAEZ,CACEJ,KAAM,WACNC,YAAa,oDACbC,MAAO,EACPC,MAAO,EACPC,SAAU,wCAEZ,CACEJ,KAAM,UACNC,YACE,kGACFC,MAAO,GACPC,MAAO,GACPC,SAAU,qC,wBCrBRC,EAAUC,IAAOC,IAAV,qEAAGD,CAAH,0DAMPE,EAAQF,IAAOC,IAAV,mEAAGD,CAAH,uFAQL,gBAAYG,EAAZ,EAAGC,MAASD,MAAZ,OAA0BE,YAAzB,CAAD,8CACqBF,EAAMG,YAAYC,OAmEhCC,GAFEC,UA1DF,SAAC,GAAD,IACXC,EADW,EACXA,SADW,IAEXC,KAE2BC,EAJhB,EAGTC,KACEC,aAAgBC,MAEDC,EANR,EAMTC,OAAUC,MAND,OASX,kBAAC,IAAD,CAAQR,SAAUA,EAAUK,MAAOH,EAAWO,MAAI,GAChD,kBAAC,IAAD,CACEJ,MAAM,OACNK,SAAU,CACR,OACA,SACA,aACA,QACA,oBACA,gBACA,gBAGJ,kBAAC,IAAD,CAAOC,GAAG,MAAV,2BACCL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OACE,kBAAC,OAAD,CAAMC,IAAKJ,EAAKE,OAAOC,KAAME,GAAIL,EAAKE,OAAOC,MAC3C,kBAAC,IAAD,CACEG,KAAMN,EAAKC,YAAYK,KACvBd,MAAOA,EACPpB,YAAa4B,EAAKC,YAAY7B,YAC9BmC,KAAMP,EAAKC,YAAYM,WAK/B,kBAAC/B,EAAD,KACE,kBAAC,IAAD,CAAQsB,GAAIU,OAAMH,GAAG,SAArB,sBAIF,kBAAC,IAAD,CAAOP,GAAG,MAAV,wBACA,kBAACnB,EAAD,KACG8B,EAAiBV,KAAI,SAAAW,GAAI,OACxB,kBAAC,IAAD,CACEN,IAAKM,EAAKvC,KACVwC,KAAMD,EAAKvC,KAAKyC,cAChBpB,MAAOkB,EAAKvC,KACZC,YAAasC,EAAKtC,YAClBC,MAAOqC,EAAKrC,MACZC,MAAOoC,EAAKpC,MACZuC,KAAMH,EAAKnC,iBASC","file":"component---src-pages-index-jsx-26f22fa839fdaa0e5fa4.js","sourcesContent":["const projects = [\n  {\n    name: 'React95',\n    description: 'A React components library with Win95 UI',\n    forks: 59,\n    stars: 1269,\n    homepage: 'https://github.com/React95/React95',\n  },\n  {\n    name: 'Yoga',\n    description:\n      'Yoga design-system: a scientific system of practices made to help each one of us achieve our highest potential and experience.',\n    forks: 9,\n    stars: 97,\n    homepage: 'https://github.com/Gympass/yoga',\n  },\n  {\n    name: 'Frigobar',\n    description: 'A simple UI toolkit for build react applications.',\n    forks: 1,\n    stars: 6,\n    homepage: 'https://github.com/frigobar/frigobar',\n  },\n  {\n    name: 'Quantum',\n    description:\n      'The default pack of components and layout principles that dictates Catho Frontend applications.',\n    forks: 16,\n    stars: 32,\n    homepage: 'https://github.com/catho/quantum',\n  },\n];\n\nexport default projects;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link, graphql } from 'gatsby';\n\nimport personalProjects from '../data/projects';\nimport { Layout, Title, Card, Button, Repo } from '../components';\nimport SEO from '../components/seo';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n`;\n\nconst Repos = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  div {\n    flex-basis: 49%;\n\n    ${({ theme: { sizes } }) => css`\n      @media (max-width: ${sizes.breakpoints.md}px) {\n        flex-basis: 100%;\n      }\n    `}\n  }\n`;\n\nconst Home = ({\n  location,\n  data: {\n    site: {\n      siteMetadata: { title: siteTitle },\n    },\n    allMdx: { edges: posts },\n  },\n}) => (\n  <Layout location={location} title={siteTitle} full>\n    <SEO\n      title=\"Home\"\n      keywords={[\n        'blog',\n        'gatsby',\n        'javascript',\n        'react',\n        'styled-components',\n        'design-system',\n        'components',\n      ]}\n    />\n    <Title as=\"h2\">Ãšltimos artigos do blog</Title>\n    {posts.map(({ node }) => {\n      const title = node.frontmatter.title || node.fields.slug;\n      return (\n        <Link key={node.fields.slug} to={node.fields.slug}>\n          <Card\n            tags={node.frontmatter.tags}\n            title={title}\n            description={node.frontmatter.description}\n            date={node.frontmatter.date}\n          />\n        </Link>\n      );\n    })}\n    <Wrapper>\n      <Button as={Link} to=\"/blog\">\n        Ver todos artigos\n      </Button>\n    </Wrapper>\n    <Title as=\"h2\">Projetos open source</Title>\n    <Repos>\n      {personalProjects.map(repo => (\n        <Repo\n          key={repo.name}\n          logo={repo.name.toLowerCase()}\n          title={repo.name}\n          description={repo.description}\n          forks={repo.forks}\n          stars={repo.stars}\n          link={repo.homepage}\n        />\n      ))}\n    </Repos>\n  </Layout>\n);\n\nexport default Home;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 3) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YYYY\", locale: \"pt-BR\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}