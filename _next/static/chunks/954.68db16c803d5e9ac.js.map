{"version":3,"file":"static/chunks/954.68db16c803d5e9ac.js","mappings":"sgBAYO,IAAMA,EAAOC,CAAAA,EAAAA,EAAAA,UAAAA,EAClB,CAAAC,EAA6BC,QAA5B,CAAEC,OAAAA,CAAM,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAO,CAAE,CAAAJ,EACnBK,EAAYC,CAAAA,EAAAA,EAAAA,MAAAA,EAAiC,YACnDC,CAAAA,EAAAA,EAAAA,mBAAAA,EAAoBN,EAAK,IAAMI,EAAUG,OAAO,EAEhDC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,SAENJ,EAIAA,EALEH,GAAU,CAACG,EAAUG,OAAO,CAAEE,IAAI,GACnB,OAAjBL,CAAAA,EAAAA,EAAUG,OAAO,GAAjBH,KAAAA,IAAAA,GAAAA,EAAmBM,IAAI,IAGrB,CAACT,GAAUG,EAAUG,OAAO,CAAEE,IAAI,GACnB,OAAjBL,CAAAA,EAAAA,EAAUG,OAAO,GAAjBH,KAAAA,IAAAA,GAAAA,EAAmBO,KAAK,GAE5B,EAAG,CAACV,EAAO,EAOT,GAAAW,EAAAC,GAAA,EAACC,SAAAA,CAAOC,UAAWC,IAAAA,IAAAA,CAAab,QAASA,EAASH,IAAKI,WACrD,GAAAQ,EAAAC,GAAA,EAACI,KAAAA,CAAGF,UAAWC,IAAAA,UAAAA,UACZd,EAAMgB,GAAG,CAAC,OAAC,CAAEC,KAAAA,CAAI,CAAEC,QAAAA,CAAO,CAAE,CAAArB,QAC3B,GAAAa,EAAAC,GAAA,EAACQ,KAAAA,UACC,GAAAT,EAAAC,GAAA,EAACS,SAAAA,CACCP,UAAWC,IAAAA,UAAAA,CACXI,QAAS,KACPA,IAXZhB,EAAUG,OAAO,CAAEI,KAAK,EAad,WAECQ,KARIA,QAenB,EAGFtB,CAAAA,EAAK0B,WAAW,CAAG,yBCpDnBC,EAAAC,OAAA,EAAkB","sources":["webpack://_N_E/./src/components/menu/menu.tsx","webpack://_N_E/./src/components/menu/menu.module.css"],"sourcesContent":["import { forwardRef, useImperativeHandle, useRef, useEffect } from 'react';\n\nimport styles from './menu.module.css';\n\ntype MenuProps = {\n  isOpen?: boolean;\n  items: {\n    text: string;\n    onClick: () => void;\n  }[];\n} & React.DialogHTMLAttributes<HTMLDialogElement>;\n\nexport const Menu = forwardRef<HTMLDialogElement, MenuProps>(\n  ({ isOpen, items, onClose }, ref) => {\n    const dialogRef = useRef<HTMLDialogElement | null>(null);\n    useImperativeHandle(ref, () => dialogRef.current!);\n\n    useEffect(() => {\n      if (isOpen && !dialogRef.current!.open) {\n        dialogRef.current?.show();\n      }\n\n      if (!isOpen && dialogRef.current!.open) {\n        dialogRef.current?.close();\n      }\n    }, [isOpen]);\n\n    function handleClose() {\n      dialogRef.current!.close();\n    }\n\n    return (\n      <dialog className={styles.menu} onClose={onClose} ref={dialogRef}>\n        <ul className={styles.menu__list}>\n          {items.map(({ text, onClick }) => (\n            <li key={text}>\n              <button\n                className={styles.menu__item}\n                onClick={() => {\n                  onClick();\n                  handleClose();\n                }}\n              >\n                {text}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </dialog>\n    );\n  },\n);\n\nMenu.displayName = 'Menu';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_menu__zyZg1\",\"menu__list\":\"menu_menu__list__MtPW2\",\"menu__item\":\"menu_menu__item__KeLtK\"};"],"names":["Menu","forwardRef","param","ref","isOpen","items","onClose","dialogRef","useRef","useImperativeHandle","current","useEffect","open","show","close","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","dialog","className","styles","ul","map","text","onClick","li","button","displayName","module","exports"],"sourceRoot":""}