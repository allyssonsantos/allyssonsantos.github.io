{"version":3,"file":"static/chunks/919.217d9132616d6e40.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@codesandbox/nodebox/build/index.mjs","webpack://_N_E/./node_modules/@codesandbox/sandpack-client/dist/clients/node/index.mjs","webpack://_N_E/<anon>"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\n// ../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/pad.js\nvar require_pad = __commonJS({\n  \"../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/pad.js\"(exports, module) {\n    module.exports = function pad(num, size) {\n      var s = \"000000000\" + num;\n      return s.substr(s.length - size);\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/fingerprint.browser.js\nvar require_fingerprint_browser = __commonJS({\n  \"../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/fingerprint.browser.js\"(exports, module) {\n    var pad = require_pad();\n    var env = typeof window === \"object\" ? window : self;\n    var globalCount = Object.keys(env).length;\n    var mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\n    var clientId = pad((mimeTypesLength + navigator.userAgent.length).toString(36) + globalCount.toString(36), 4);\n    module.exports = function fingerprint() {\n      return clientId;\n    };\n  }\n});\n\n// ../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/getRandomValue.browser.js\nvar require_getRandomValue_browser = __commonJS({\n  \"../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/lib/getRandomValue.browser.js\"(exports, module) {\n    var getRandomValue;\n    var crypto = typeof window !== \"undefined\" && (window.crypto || window.msCrypto) || typeof self !== \"undefined\" && self.crypto;\n    if (crypto) {\n      lim = Math.pow(2, 32) - 1;\n      getRandomValue = function() {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n      };\n    } else {\n      getRandomValue = Math.random;\n    }\n    var lim;\n    module.exports = getRandomValue;\n  }\n});\n\n// ../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/index.js\nvar require_cuid = __commonJS({\n  \"../../node_modules/.pnpm/cuid@2.1.8/node_modules/cuid/index.js\"(exports, module) {\n    var fingerprint = require_fingerprint_browser();\n    var pad = require_pad();\n    var getRandomValue = require_getRandomValue_browser();\n    var c = 0;\n    var blockSize = 4;\n    var base = 36;\n    var discreteValues = Math.pow(base, blockSize);\n    function randomBlock() {\n      return pad((getRandomValue() * discreteValues << 0).toString(base), blockSize);\n    }\n    function safeCounter() {\n      c = c < discreteValues ? c : 0;\n      c++;\n      return c - 1;\n    }\n    function cuid3() {\n      var letter = \"c\", timestamp = new Date().getTime().toString(base), counter = pad(safeCounter().toString(base), blockSize), print = fingerprint(), random = randomBlock() + randomBlock();\n      return letter + timestamp + counter + print + random;\n    }\n    cuid3.slug = function slug() {\n      var date = new Date().getTime().toString(36), counter = safeCounter().toString(36).slice(-4), print = fingerprint().slice(0, 1) + fingerprint().slice(-1), random = randomBlock().slice(-2);\n      return date.slice(-2) + counter + print + random;\n    };\n    cuid3.isCuid = function isCuid(stringToCheck) {\n      if (typeof stringToCheck !== \"string\")\n        return false;\n      if (stringToCheck.startsWith(\"c\"))\n        return true;\n      return false;\n    };\n    cuid3.isSlug = function isSlug(stringToCheck) {\n      if (typeof stringToCheck !== \"string\")\n        return false;\n      var stringLength = stringToCheck.length;\n      if (stringLength >= 7 && stringLength <= 10)\n        return true;\n      return false;\n    };\n    cuid3.fingerprint = fingerprint;\n    module.exports = cuid3;\n  }\n});\n\n// ../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/createDeferredExecutor.js\nvar require_createDeferredExecutor = __commonJS({\n  \"../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/createDeferredExecutor.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.createDeferredExecutor = void 0;\n    function createDeferredExecutor() {\n      const executor = (resolve, reject) => {\n        executor.state = \"pending\";\n        executor.resolve = (data) => {\n          if (executor.state !== \"pending\") {\n            return;\n          }\n          executor.result = data;\n          const onFulfilled = (value) => {\n            executor.state = \"fulfilled\";\n            return value;\n          };\n          return resolve(data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled));\n        };\n        executor.reject = (reason) => {\n          if (executor.state !== \"pending\") {\n            return;\n          }\n          queueMicrotask(() => {\n            executor.state = \"rejected\";\n          });\n          return reject(executor.rejectionReason = reason);\n        };\n      };\n      return executor;\n    }\n    exports.createDeferredExecutor = createDeferredExecutor;\n  }\n});\n\n// ../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/DeferredPromise.js\nvar require_DeferredPromise = __commonJS({\n  \"../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/DeferredPromise.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.DeferredPromise = void 0;\n    var createDeferredExecutor_1 = require_createDeferredExecutor();\n    var DeferredPromise4 = class extends Promise {\n      #executor;\n      resolve;\n      reject;\n      constructor(executor = null) {\n        const deferredExecutor = (0, createDeferredExecutor_1.createDeferredExecutor)();\n        super((originalResolve, originalReject) => {\n          deferredExecutor(originalResolve, originalReject);\n          executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n        });\n        this.#executor = deferredExecutor;\n        this.resolve = this.#executor.resolve;\n        this.reject = this.#executor.reject;\n      }\n      get state() {\n        return this.#executor.state;\n      }\n      get rejectionReason() {\n        return this.#executor.rejectionReason;\n      }\n      then(onFulfilled, onRejected) {\n        return this.#decorate(super.then(onFulfilled, onRejected));\n      }\n      catch(onRejected) {\n        return this.#decorate(super.catch(onRejected));\n      }\n      finally(onfinally) {\n        return this.#decorate(super.finally(onfinally));\n      }\n      #decorate(promise) {\n        return Object.defineProperties(promise, {\n          resolve: { configurable: true, value: this.resolve },\n          reject: { configurable: true, value: this.reject }\n        });\n      }\n    };\n    exports.DeferredPromise = DeferredPromise4;\n  }\n});\n\n// ../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/index.js\nvar require_build = __commonJS({\n  \"../../node_modules/.pnpm/@open-draft+deferred-promise@2.1.0/node_modules/@open-draft/deferred-promise/build/index.js\"(exports) {\n    \"use strict\";\n    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n      if (k2 === void 0)\n        k2 = k;\n      var desc = Object.getOwnPropertyDescriptor(m, k);\n      if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = { enumerable: true, get: function() {\n          return m[k];\n        } };\n      }\n      Object.defineProperty(o, k2, desc);\n    } : function(o, m, k, k2) {\n      if (k2 === void 0)\n        k2 = k;\n      o[k2] = m[k];\n    });\n    var __exportStar = exports && exports.__exportStar || function(m, exports2) {\n      for (var p in m)\n        if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports2, p))\n          __createBinding(exports2, m, p);\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    __exportStar(require_createDeferredExecutor(), exports);\n    __exportStar(require_DeferredPromise(), exports);\n  }\n});\n\n// ../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/MemoryLeakError.js\nvar require_MemoryLeakError = __commonJS({\n  \"../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/MemoryLeakError.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.MemoryLeakError = void 0;\n    var MemoryLeakError = class extends Error {\n      emitter;\n      type;\n      count;\n      constructor(emitter, type, count) {\n        super(`Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`);\n        this.emitter = emitter;\n        this.type = type;\n        this.count = count;\n        this.name = \"MaxListenersExceededWarning\";\n      }\n    };\n    exports.MemoryLeakError = MemoryLeakError;\n  }\n});\n\n// ../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/Emitter.js\nvar require_Emitter = __commonJS({\n  \"../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/Emitter.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.Emitter = void 0;\n    var MemoryLeakError_1 = require_MemoryLeakError();\n    var _events, _maxListeners, _hasWarnedAboutPotentialMemortyLeak, _getListeners, getListeners_fn, _removeListener, removeListener_fn, _wrapOnceListener, wrapOnceListener_fn, _internalEmit, internalEmit_fn;\n    var _Emitter = class {\n      constructor() {\n        __privateAdd(this, _getListeners);\n        __privateAdd(this, _removeListener);\n        __privateAdd(this, _wrapOnceListener);\n        __privateAdd(this, _internalEmit);\n        __privateAdd(this, _events, void 0);\n        __privateAdd(this, _maxListeners, void 0);\n        __privateAdd(this, _hasWarnedAboutPotentialMemortyLeak, void 0);\n        __privateSet(this, _events, /* @__PURE__ */ new Map());\n        __privateSet(this, _maxListeners, _Emitter.defaultMaxListeners);\n        __privateSet(this, _hasWarnedAboutPotentialMemortyLeak, false);\n      }\n      static listenerCount(emitter, eventName) {\n        return emitter.listenerCount(eventName);\n      }\n      setMaxListeners(maxListeners) {\n        __privateSet(this, _maxListeners, maxListeners);\n        return this;\n      }\n      getMaxListeners() {\n        return __privateGet(this, _maxListeners);\n      }\n      eventNames() {\n        return Array.from(__privateGet(this, _events).keys());\n      }\n      emit(eventName, ...data) {\n        const listeners = __privateMethod(this, _getListeners, getListeners_fn).call(this, eventName);\n        listeners.forEach((listener) => {\n          listener.apply(this, data);\n        });\n        return listeners.length > 0;\n      }\n      addListener(eventName, listener) {\n        __privateMethod(this, _internalEmit, internalEmit_fn).call(this, \"newListener\", eventName, listener);\n        const nextListeners = __privateMethod(this, _getListeners, getListeners_fn).call(this, eventName).concat(listener);\n        __privateGet(this, _events).set(eventName, nextListeners);\n        if (__privateGet(this, _maxListeners) > 0 && this.listenerCount(eventName) > __privateGet(this, _maxListeners) && !__privateGet(this, _hasWarnedAboutPotentialMemortyLeak)) {\n          __privateSet(this, _hasWarnedAboutPotentialMemortyLeak, true);\n          const memoryLeakWarning = new MemoryLeakError_1.MemoryLeakError(this, eventName, this.listenerCount(eventName));\n          console.warn(memoryLeakWarning);\n        }\n        return this;\n      }\n      on(eventName, listener) {\n        return this.addListener(eventName, listener);\n      }\n      once(eventName, listener) {\n        return this.addListener(eventName, __privateMethod(this, _wrapOnceListener, wrapOnceListener_fn).call(this, eventName, listener));\n      }\n      prependListener(eventName, listener) {\n        const listeners = __privateMethod(this, _getListeners, getListeners_fn).call(this, eventName);\n        if (listeners.length > 0) {\n          const nextListeners = [listener].concat(listeners);\n          __privateGet(this, _events).set(eventName, nextListeners);\n        } else {\n          __privateGet(this, _events).set(eventName, listeners.concat(listener));\n        }\n        return this;\n      }\n      prependOnceListener(eventName, listener) {\n        return this.prependListener(eventName, __privateMethod(this, _wrapOnceListener, wrapOnceListener_fn).call(this, eventName, listener));\n      }\n      removeListener(eventName, listener) {\n        const listeners = __privateMethod(this, _getListeners, getListeners_fn).call(this, eventName);\n        if (listeners.length > 0) {\n          __privateMethod(this, _removeListener, removeListener_fn).call(this, listeners, listener);\n          __privateGet(this, _events).set(eventName, listeners);\n          __privateMethod(this, _internalEmit, internalEmit_fn).call(this, \"removeListener\", eventName, listener);\n        }\n        return this;\n      }\n      off(eventName, listener) {\n        return this.removeListener(eventName, listener);\n      }\n      removeAllListeners(eventName) {\n        if (eventName) {\n          __privateGet(this, _events).delete(eventName);\n        } else {\n          __privateGet(this, _events).clear();\n        }\n        return this;\n      }\n      listeners(eventName) {\n        return Array.from(__privateMethod(this, _getListeners, getListeners_fn).call(this, eventName));\n      }\n      listenerCount(eventName) {\n        return __privateMethod(this, _getListeners, getListeners_fn).call(this, eventName).length;\n      }\n      rawListeners(eventName) {\n        return this.listeners(eventName);\n      }\n    };\n    var Emitter2 = _Emitter;\n    _events = new WeakMap();\n    _maxListeners = new WeakMap();\n    _hasWarnedAboutPotentialMemortyLeak = new WeakMap();\n    _getListeners = new WeakSet();\n    getListeners_fn = function(eventName) {\n      return __privateGet(this, _events).get(eventName) || [];\n    };\n    _removeListener = new WeakSet();\n    removeListener_fn = function(listeners, listener) {\n      const index = listeners.indexOf(listener);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n      return [];\n    };\n    _wrapOnceListener = new WeakSet();\n    wrapOnceListener_fn = function(eventName, listener) {\n      const onceListener = (...data) => {\n        this.removeListener(eventName, onceListener);\n        listener.apply(this, data);\n      };\n      return onceListener;\n    };\n    _internalEmit = new WeakSet();\n    internalEmit_fn = function(internalEventName, eventName, listener) {\n      this.emit(\n        internalEventName,\n        ...[eventName, listener]\n      );\n    };\n    __publicField(Emitter2, \"defaultMaxListeners\", 10);\n    exports.Emitter = Emitter2;\n  }\n});\n\n// ../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/index.js\nvar require_lib = __commonJS({\n  \"../../node_modules/.pnpm/strict-event-emitter@0.4.3/node_modules/strict-event-emitter/lib/index.js\"(exports) {\n    \"use strict\";\n    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n      if (k2 === void 0)\n        k2 = k;\n      var desc = Object.getOwnPropertyDescriptor(m, k);\n      if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = { enumerable: true, get: function() {\n          return m[k];\n        } };\n      }\n      Object.defineProperty(o, k2, desc);\n    } : function(o, m, k, k2) {\n      if (k2 === void 0)\n        k2 = k;\n      o[k2] = m[k];\n    });\n    var __exportStar = exports && exports.__exportStar || function(m, exports2) {\n      for (var p in m)\n        if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports2, p))\n          __createBinding(exports2, m, p);\n    };\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    __exportStar(require_Emitter(), exports);\n    __exportStar(require_MemoryLeakError(), exports);\n  }\n});\n\n// src/messages.ts\nvar import_cuid = __toESM(require_cuid());\n\n// ../../node_modules/.pnpm/outvariant@1.4.0/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdjo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const isConstructor = ErrorConstructor.prototype.name != null;\n    const error = isConstructor ? new ErrorConstructor(format(message, positionals)) : ErrorConstructor(format(message, positionals));\n    throw error;\n  }\n};\n\n// src/messages.ts\nvar import_deferred_promise = __toESM(require_build());\n\n// src/logger.ts\nvar FLAG = window.localStorage[\"CSB_EMULATOR_DEBUG\"];\nvar DEFAULT = \"\\x1B[0m\";\nvar GREEN = \"\\x1B[32;1m\";\nvar RED = \"\\x1B[31m\";\nvar BLUE = \"\\x1B[34m\";\nvar YELLOW = \"\\x1B[33;1m\";\nvar MAGENTA = \"\\x1B[35;1m\";\nvar CYAN = \"\\x1B[36;1m\";\nvar COLOR_SCOPE = {\n  preview: YELLOW,\n  emulator: MAGENTA,\n  runtime: CYAN,\n  bridge: BLUE,\n  \"runtime:worker\": CYAN\n};\nfunction createDebug(scope) {\n  return function debug3(message, ...data) {\n    if (FLAG === \"true\") {\n      const direction = () => {\n        if (message.includes(\"sender\"))\n          return `${GREEN}sender`;\n        if (message.includes(\"receiver\"))\n          return `${RED}receiver`;\n        return \"\";\n      };\n      const cleanMessage = message.replace(/\\[.+\\]:/, \"\");\n      console.debug(`${COLOR_SCOPE[scope]}${scope}:${direction()}${DEFAULT}:${cleanMessage}`, ...data);\n    }\n  };\n}\n\n// src/messages.ts\nvar debug = createDebug(\"emulator\");\nvar MessageReceiver = class {\n  emitter;\n  senderPort = null;\n  constructor() {\n    this.emitter = new EventTarget();\n    this.waitForHandshake();\n  }\n  waitForHandshake() {\n    const handshakePromise = new import_deferred_promise.DeferredPromise();\n    const handshakeListener = (message) => {\n      const { data } = message;\n      debug(\"[message-receiver]: incoming\", message);\n      if (data.type === \"internal/handshake\") {\n        invariant(\n          message.ports.length > 0,\n          \"Failed to confirm a MessageReceiver handshake: received event has no ports\"\n        );\n        this.senderPort = message.ports[0];\n        this.addMessageListener();\n        debug(\"[message-receiver]: handshake received!\", this.senderPort);\n        this.send(\"internal/handshake/done\");\n        debug(\"[message-receiver]: finish handshake\");\n      }\n    };\n    window.addEventListener(\"message\", handshakeListener);\n    handshakePromise.then(() => {\n      window.removeEventListener(\"message\", handshakeListener);\n    });\n    window.parent.postMessage({ type: \"internal/ready\" }, \"*\");\n    return handshakePromise;\n  }\n  addMessageListener() {\n    invariant(\n      this.senderPort,\n      \"[MessageReceiver] Failed to add a message listener: sender port is not defined. Did you forget to await a handshake?\"\n    );\n    this.senderPort.onmessage = (evt) => {\n      const data = evt.data;\n      if (data.type == null) {\n        return;\n      }\n      this.emitter.dispatchEvent(\n        new MessageEvent(data.type, {\n          data: data.payload\n        })\n      );\n    };\n  }\n  on(event, listener, options) {\n    this.emitter.addEventListener(\n      event,\n      async (message) => {\n        if (!(message instanceof MessageEvent)) {\n          return;\n        }\n        const { operationId, payload } = message.data;\n        try {\n          const listenerPayload = await listener(payload);\n          this.send(\"internal/operation/done\", { operationId, listenerPayload });\n        } catch (error) {\n          if (error instanceof Error) {\n            this.send(\"internal/operation/failed\", { operationId, error });\n          }\n        }\n      },\n      options\n    );\n  }\n  send(event, ...data) {\n    invariant(\n      this.senderPort,\n      '[MessageReceiver] Failed to send a message \"%j\": sender port is not defined. Did you forget to await a handshake?',\n      event\n    );\n    const payload = data[0] || {};\n    debug('[message-receiver]: send \"%s\"', event, payload);\n    this.senderPort.postMessage({ type: event, payload });\n  }\n};\nvar MessageSender = class {\n  constructor(target) {\n    this.target = target;\n    this.emitter = new EventTarget();\n    this.channel = new MessageChannel();\n    this.receiverPort = this.channel.port1;\n    const receiverReadyPromise = new import_deferred_promise.DeferredPromise();\n    const handshakeListener = (message) => {\n      if (message.data.type === \"internal/ready\") {\n        debug(\"[message-sender]: runtime is ready\");\n        receiverReadyPromise.resolve();\n      }\n    };\n    window.addEventListener(\"message\", handshakeListener);\n    receiverReadyPromise.then(() => {\n      window.removeEventListener(\"message\", handshakeListener);\n    });\n    this.receiverReadyPromise = receiverReadyPromise;\n    this.receiverPort.onmessage = (evt) => {\n      const data = evt.data;\n      if (data.type != null) {\n        debug('[message-sender]: emitting \"%s\" event...', data.type, data.payload);\n        this.emitter.dispatchEvent(new MessageEvent(data.type, { data: data.payload }));\n      }\n    };\n  }\n  emitter;\n  channel;\n  receiverPort;\n  receiverReadyPromise;\n  async handshake() {\n    const handshakePromise = new import_deferred_promise.DeferredPromise();\n    await this.receiverReadyPromise;\n    debug(\"[message-sender]: sending handshake\");\n    this.target.postMessage(\n      {\n        type: \"internal/handshake\"\n      },\n      \"*\",\n      [this.channel.port2]\n    );\n    this.on(\"internal/handshake/done\", () => {\n      handshakePromise.resolve();\n      clearTimeout(rejectionTimeout);\n    });\n    const rejectionTimeout = setTimeout(() => {\n      handshakePromise.reject(new Error(\"MessageSender: Handshake timeout\"));\n    }, 5e3);\n    return handshakePromise;\n  }\n  on(event, listener, options) {\n    debug('[message-sender]: add listener \"%s\"', event);\n    this.emitter.addEventListener(\n      event,\n      (message) => {\n        if (message instanceof MessageEvent) {\n          listener(message);\n        }\n      },\n      options\n    );\n  }\n  off(event, listener, options) {\n    this.emitter.removeEventListener(event, listener, options);\n  }\n  async send(event, ...data) {\n    const operationPromise = new import_deferred_promise.DeferredPromise();\n    const operationId = (0, import_cuid.default)();\n    const payload = data[0] || {};\n    debug('[message-sender]: send \"%s\" (%s)', event, operationId, payload);\n    this.receiverPort.postMessage({ type: event, payload: { operationId, payload } });\n    debug('[message-sender]: adding done listener for \"%s\" (%s)', event, operationId);\n    const handleOperationDone = (doneEvent) => {\n      const { data: data2 } = doneEvent;\n      if (data2.operationId === operationId) {\n        const listenerPayload = data2.listenerPayload || {};\n        debug('[message-sender]: resolving \"%s (%s) promise!', event, operationId);\n        operationPromise.resolve({\n          ...listenerPayload,\n          operationId: data2.operationId\n        });\n      }\n    };\n    const handleOperationFailed = (failEvent) => {\n      const { data: data2 } = failEvent;\n      if (data2.operationId === operationId) {\n        debug('[message-sender]: rejecting \"%s (%s) promise!', event, operationId);\n        operationPromise.reject(data2.error);\n      }\n    };\n    this.on(\"internal/operation/done\", handleOperationDone);\n    this.on(\"internal/operation/failed\", handleOperationFailed);\n    return operationPromise.finally(() => {\n      this.emitter.removeEventListener(\"internal/operation/done\", handleOperationDone);\n      this.emitter.removeEventListener(\"internal/operation/failed\", handleOperationFailed);\n    });\n  }\n};\n\n// src/Nodebox.ts\nvar import_deferred_promise3 = __toESM(require_build());\n\n// src/modules/fs.ts\nvar import_cuid2 = __toESM(require_cuid());\nvar FileSystemApi = class {\n  constructor(channel) {\n    this.channel = channel;\n  }\n  async init(files) {\n    await this.channel.send(\"fs/init\", { files });\n  }\n  async readFile(path, encoding) {\n    const response = await this.channel.send(\"fs/readFile\", { path, encoding }).catch((error) => {\n      throw new Error(format('Failed to read file at path \"%s\"', path), { cause: error });\n    });\n    if (!response) {\n      throw new Error(\"File not found\");\n    }\n    return response.data;\n  }\n  async writeFile(path, content, options) {\n    let encoding = void 0;\n    let recursive = false;\n    if (typeof options === \"object\") {\n      encoding = options.encoding;\n      recursive = !!options.recursive;\n    } else if (typeof options === \"string\") {\n      encoding = options;\n    }\n    await this.channel.send(\"fs/writeFile\", { path, content, encoding, recursive }).catch((error) => {\n      throw new Error(format('Failed to write file at path \"%s\"', path), { cause: error });\n    });\n  }\n  async readdir(path) {\n    const response = await this.channel.send(\"fs/readdir\", { path }).catch((error) => {\n      throw new Error(format('Failed to read directory at path \"%s\"', path), { cause: error });\n    });\n    if (!response) {\n      throw new Error(\"Directory not found\");\n    }\n    return response.data;\n  }\n  async mkdir(path, options) {\n    const recursive = !!options?.recursive;\n    await this.channel.send(\"fs/mkdir\", { path, recursive }).catch((error) => {\n      throw new Error(format('Failed to make directory at path \"%s\"', path), { cause: error });\n    });\n  }\n  async stat(path) {\n    const response = await this.channel.send(\"fs/stat\", { path }).catch((error) => {\n      throw new Error(format('Failed to stat file at path \"%s\"', path), { cause: error });\n    });\n    if (!response) {\n      throw new Error(\"File not found\");\n    }\n    return response.data;\n  }\n  async rm(path, options) {\n    const { force, recursive } = options || {};\n    await this.channel.send(\"fs/rm\", { path, force, recursive }).catch((error) => {\n      throw new Error(format('Failed to remove file at path \"%s\"', path), { cause: error });\n    });\n  }\n  async watch(includes, excludes, listener) {\n    const watcherId = (0, import_cuid2.default)();\n    await this.channel.send(\"fs/watch\", { watcherId, includes, excludes });\n    this.channel.on(\"fs/watch-event\", ({ data }) => {\n      if (data.watcherId === watcherId && listener) {\n        const evt = { ...data };\n        delete evt.watcherId;\n        listener(evt);\n      }\n    });\n    return {\n      dispose: () => this.channel.send(\"fs/unwatch\", { watcherId })\n    };\n  }\n};\n\n// src/modules/shell.ts\nvar import_strict_event_emitter = __toESM(require_lib());\nvar ShellApi = class {\n  constructor(channel) {\n    this.channel = channel;\n  }\n  create() {\n    return new ShellProcess(this.channel);\n  }\n};\nvar ShellProcess = class {\n  constructor(channel) {\n    this.channel = channel;\n    this.state = \"running\";\n    this.stdout = new import_strict_event_emitter.Emitter();\n    this.stderr = new import_strict_event_emitter.Emitter();\n    this.stdin = {\n      write: (data) => {\n        if (!this.id) {\n          throw new Error(\"Failed to write to stdin, no process is currently running\");\n        }\n        return this.channel.send(\"shell/stdin\", { data, workerId: this.id });\n      }\n    };\n    this.forwardStdEvents();\n  }\n  id;\n  state;\n  stdout;\n  stderr;\n  stdin;\n  forwardStdEvents() {\n    this.channel.on(\"worker/tty\", (message) => {\n      const { data } = message;\n      if (data.workerId !== this.id) {\n        return;\n      }\n      switch (data.payload.type) {\n        case \"out\": {\n          this.stdout.emit(\"data\", data.payload.data);\n          break;\n        }\n        case \"err\": {\n          this.stderr.emit(\"data\", data.payload.data);\n          break;\n        }\n      }\n    });\n  }\n  async runCommand(command, args, options = {}) {\n    invariant(!this.id, 'Failed to run \"runCommand\" on a ShellProcess: there is already a process running.');\n    const shellInfo = await this.channel.send(\"shell/runCommand\", { command, args, options });\n    invariant(shellInfo, 'Failed to run \"runCommand\" on a ShellProcess: was not able to retrieve a running process.');\n    this.id = shellInfo.id;\n    this.state = \"running\";\n    return shellInfo;\n  }\n  async on(message, listener) {\n    switch (message) {\n      case \"progress\": {\n        this.channel.on(\"worker/progress\", ({ data }) => {\n          listener(data.status);\n        });\n        return;\n      }\n      case \"exit\": {\n        this.channel.on(\"worker/exit\", ({ data }) => {\n          if (data.workerId === this.id) {\n            listener(data.exitCode, data.error);\n          }\n        });\n        return;\n      }\n    }\n  }\n  async kill() {\n    invariant(\n      this.id,\n      'Failed to run \"kill\" on a ShellProcess: there is no process running. Did you forget to run it?'\n    );\n    this.state = \"idle\";\n    await this.channel.send(\"shell/exit\", { id: this.id }).catch((error) => {\n      throw new Error(format('Failed to kill shell with ID \"%s\"', this.id), { cause: error });\n    });\n    this.id = void 0;\n  }\n};\n\n// src/modules/preview.ts\nvar import_deferred_promise2 = __toESM(require_build());\nvar TIMEOUT = 2e4;\nvar PreviewApi = class {\n  constructor(channel) {\n    this.channel = channel;\n  }\n  async waitFor(payload, predicate, timeout = TIMEOUT) {\n    const readyPromise = new import_deferred_promise2.DeferredPromise();\n    const rejectTimeout = setTimeout(() => {\n      readyPromise.reject();\n    }, timeout);\n    const previewInformation = await this.channel.send(\"preview/get/info\", payload).catch((error) => {\n      readyPromise.reject(\n        new Error(\n          format(\n            'Failed to look up preview information for shell ID \"%s\" (port: %d)',\n            payload.sourceShellId,\n            payload.port\n          )\n        )\n      );\n    });\n    const foundPreview = previewInformation && predicate(previewInformation);\n    if (foundPreview) {\n      readyPromise.resolve({\n        url: previewInformation.url,\n        port: previewInformation.port,\n        sourceShellId: previewInformation.sourceShellId\n      });\n    }\n    this.channel.on(\"preview/port/ready\", ({ data }) => {\n      if (!foundPreview && predicate(data)) {\n        readyPromise.resolve({\n          url: data.url,\n          port: data.port,\n          sourceShellId: data.sourceShellId\n        });\n      }\n    });\n    return readyPromise.finally(() => {\n      clearTimeout(rejectTimeout);\n    });\n  }\n  async getByShellId(sourceShellId, timeout) {\n    return this.waitFor({ sourceShellId }, (data) => data.sourceShellId === sourceShellId, timeout).catch((error) => {\n      throw new Error(format('Failed to get shell by ID \"%s\"', sourceShellId), { cause: error });\n    });\n  }\n  async waitForPort(port, timeout) {\n    return this.waitFor({ port }, (data) => data.port === port, timeout).catch((error) => {\n      throw new Error(format(\"Failed to await port %d\", port), { cause: error });\n    });\n  }\n};\n\n// src/Nodebox.ts\nvar DEFAULT_RUNTIME_URL = \"https://nodebox-runtime.codesandbox.io\";\nvar debug2 = createDebug(\"emulator\");\nvar Nodebox = class {\n  constructor(options) {\n    this.options = options;\n    invariant(\n      this.options.iframe,\n      'Failed to create a Nodebox: expected \"iframe\" argument to be a reference to an <iframe> element but got %j',\n      this.options.iframe\n    );\n    this.url = this.options.runtimeUrl || DEFAULT_RUNTIME_URL;\n    this.isConnected = false;\n  }\n  channel = null;\n  isConnected;\n  url;\n  fileSystemApi = null;\n  shellApi = null;\n  previewApi = null;\n  async connect() {\n    const { iframe, cdnUrl } = this.options;\n    debug2(\"[message-sender]: Connecting to node emulator...\");\n    const connectionPromise = new import_deferred_promise3.DeferredPromise();\n    if (!this.url) {\n      connectionPromise.reject(\n        new Error(\"Nodebox URL is missing. Did you forget to provide it when creating this Nodebox instance?\")\n      );\n    }\n    invariant(\n      iframe.contentWindow,\n      \"Failed to create a MessageChannel with the Nodebox iframe: no content window found\"\n    );\n    this.channel = new MessageSender(iframe.contentWindow);\n    const frameLoadPromise = new import_deferred_promise3.DeferredPromise();\n    iframe.setAttribute(\"src\", this.url);\n    iframe.addEventListener(\n      \"load\",\n      () => {\n        frameLoadPromise.resolve();\n      },\n      { once: true }\n    );\n    iframe.addEventListener(\n      \"error\",\n      (event) => {\n        frameLoadPromise.reject(event.error);\n      },\n      { once: true }\n    );\n    await frameLoadPromise;\n    debug2(\"[message-sender]: IFrame loaded...\");\n    await this.channel.handshake();\n    debug2(\"[message-sender]: Handshake completed...\");\n    this.channel.send(\"connect\", {\n      cdnUrl\n    });\n    this.channel.on(\"runtime/ready\", () => {\n      connectionPromise.resolve();\n    });\n    return connectionPromise.then(() => {\n      debug2(\"[message-sender]: Connected to runtime...\");\n      this.isConnected = true;\n    });\n  }\n  get fs() {\n    invariant(\n      this.isConnected,\n      'Failed to access the File System API: consumer is not connected. Did you forget to run \"connect()\"?'\n    );\n    if (this.fileSystemApi) {\n      return this.fileSystemApi;\n    }\n    this.fileSystemApi = new FileSystemApi(this.channel);\n    return this.fileSystemApi;\n  }\n  get shell() {\n    invariant(\n      this.isConnected,\n      'Failed to access the Shell API: consumer is not connected. Did you forget to run \"connect()\"?'\n    );\n    if (this.shellApi) {\n      return this.shellApi;\n    }\n    this.shellApi = new ShellApi(this.channel);\n    return this.shellApi;\n  }\n  get preview() {\n    invariant(\n      this.isConnected,\n      'Failed to access the Preview API: consumer is not connected. Did you forget to run \"connect()\"?'\n    );\n    if (this.previewApi) {\n      return this.previewApi;\n    }\n    this.previewApi = new PreviewApi(this.channel);\n    return this.previewApi;\n  }\n};\n\n// src/runtime-protocol.types.ts\nvar INJECT_MESSAGE_TYPE = \"INJECT_AND_INVOKE\";\nvar PREVIEW_LOADED_MESSAGE_TYPE = \"PREVIEW_LOADED\";\nexport {\n  INJECT_MESSAGE_TYPE,\n  MessageReceiver,\n  MessageSender,\n  Nodebox,\n  PREVIEW_LOADED_MESSAGE_TYPE\n};\n","import { _ as __awaiter, a as __generator, n as nullthrows, c as createError, g as __extends, h as __assign } from '../../types-0877c553.mjs';\nimport { INJECT_MESSAGE_TYPE, Nodebox, PREVIEW_LOADED_MESSAGE_TYPE } from '@codesandbox/nodebox';\nimport { S as SandpackClient } from '../../base-80a1f760.mjs';\nimport { c as consoleHook, f as fromBundlerFilesToFS, r as readBuffer, w as writeBuffer, g as generateRandomId, E as EventEmitter, a as getMessageFromError, b as findStartScriptPackageJson } from '../../consoleHook-cdbe54ab.mjs';\nimport 'outvariant';\nimport 'dequal';\n\nfunction loadPreviewIframe(iframe, url) {\n    return __awaiter(this, void 0, void 0, function () {\n        var contentWindow, TIME_OUT, MAX_MANY_TIRES, tries, timeout;\n        return __generator(this, function (_a) {\n            contentWindow = iframe.contentWindow;\n            nullthrows(contentWindow, \"Failed to await preview iframe: no content window found\");\n            TIME_OUT = 90000;\n            MAX_MANY_TIRES = 20;\n            tries = 0;\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    var triesToSetUrl = function () {\n                        var onLoadPage = function () {\n                            clearTimeout(timeout);\n                            tries = MAX_MANY_TIRES;\n                            resolve();\n                            iframe.removeEventListener(\"load\", onLoadPage);\n                        };\n                        if (tries >= MAX_MANY_TIRES) {\n                            reject(createError(\"Could not able to connect to preview.\"));\n                            return;\n                        }\n                        iframe.setAttribute(\"src\", url);\n                        timeout = setTimeout(function () {\n                            triesToSetUrl();\n                            iframe.removeEventListener(\"load\", onLoadPage);\n                        }, TIME_OUT);\n                        tries = tries + 1;\n                        iframe.addEventListener(\"load\", onLoadPage);\n                    };\n                    iframe.addEventListener(\"error\", function () { return reject(new Error(\"Iframe error\")); });\n                    iframe.addEventListener(\"abort\", function () { return reject(new Error(\"Aborted\")); });\n                    triesToSetUrl();\n                })];\n        });\n    });\n}\nvar setPreviewIframeProperties = function (iframe, options) {\n    iframe.style.border = \"0\";\n    iframe.style.width = options.width || \"100%\";\n    iframe.style.height = options.height || \"100%\";\n    iframe.style.overflow = \"hidden\";\n    iframe.allow = \"cross-origin-isolated\";\n};\n\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/explicit-function-return-type, no-restricted-globals, @typescript-eslint/no-explicit-any  */\nfunction setupHistoryListeners(_a) {\n    var scope = _a.scope;\n    // @ts-ignore\n    var origHistoryProto = window.history.__proto__;\n    var historyList = [];\n    var historyPosition = 0;\n    var dispatchMessage = function (url) {\n        parent.postMessage({\n            type: \"urlchange\",\n            url: url,\n            back: historyPosition > 0,\n            forward: historyPosition < historyList.length - 1,\n            channelId: scope.channelId,\n        }, \"*\");\n    };\n    function pushHistory(url, state) {\n        // remove \"future\" locations\n        historyList.splice(historyPosition + 1);\n        historyList.push({ url: url, state: state });\n        historyPosition = historyList.length - 1;\n    }\n    Object.assign(window.history, {\n        go: function (delta) {\n            var newPos = historyPosition + delta;\n            if (newPos >= 0 && newPos <= historyList.length - 1) {\n                historyPosition = newPos;\n                var _a = historyList[historyPosition], url = _a.url, state = _a.state;\n                origHistoryProto.replaceState.call(window.history, state, \"\", url);\n                var newURL = document.location.href;\n                dispatchMessage(newURL);\n                window.dispatchEvent(new PopStateEvent(\"popstate\", { state: state }));\n            }\n        },\n        back: function () {\n            window.history.go(-1);\n        },\n        forward: function () {\n            window.history.go(1);\n        },\n        pushState: function (state, title, url) {\n            origHistoryProto.replaceState.call(window.history, state, title, url);\n            pushHistory(url, state);\n            dispatchMessage(document.location.href);\n        },\n        replaceState: function (state, title, url) {\n            origHistoryProto.replaceState.call(window.history, state, title, url);\n            historyList[historyPosition] = { state: state, url: url };\n            dispatchMessage(document.location.href);\n        },\n    });\n    function handleMessage(_a) {\n        var data = _a.data;\n        if (data.type === \"urlback\") {\n            history.back();\n        }\n        else if (data.type === \"urlforward\") {\n            history.forward();\n        }\n        else if (data.type === \"refresh\") {\n            document.location.reload();\n        }\n    }\n    window.addEventListener(\"message\", handleMessage);\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction watchResize(_a) {\n    var scope = _a.scope;\n    var lastHeight = 0;\n    function getDocumentHeight() {\n        if (typeof window === \"undefined\")\n            return 0;\n        var body = document.body;\n        var html = document.documentElement;\n        return Math.max(body.scrollHeight, body.offsetHeight, html.offsetHeight);\n    }\n    function sendResizeEvent() {\n        var height = getDocumentHeight();\n        if (lastHeight !== height) {\n            window.parent.postMessage({\n                type: \"resize\",\n                height: height,\n                codesandbox: true,\n                channelId: scope.channelId,\n            }, \"*\");\n        }\n        lastHeight = height;\n    }\n    sendResizeEvent();\n    var throttle;\n    var observer = new MutationObserver(function () {\n        if (throttle === undefined) {\n            sendResizeEvent();\n            throttle = setTimeout(function () {\n                throttle = undefined;\n            }, 300);\n        }\n    });\n    observer.observe(document, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n    });\n    /**\n     * Ideally we should only use a `MutationObserver` to trigger a resize event,\n     * however, we noted that it's not 100% reliable, so we went for polling strategy as well\n     */\n    setInterval(sendResizeEvent, 300);\n}\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nvar scripts = [\n    { code: setupHistoryListeners.toString(), id: \"historyListener\" },\n    {\n        code: \"function consoleHook({ scope }) {\" + consoleHook + \"\\n};\",\n        id: \"consoleHook\",\n    },\n    { code: watchResize.toString(), id: \"watchResize\" },\n];\nvar injectScriptToIframe = function (iframe, channelId) {\n    scripts.forEach(function (_a) {\n        var _b;\n        var code = _a.code, id = _a.id;\n        var message = {\n            uid: id,\n            type: INJECT_MESSAGE_TYPE,\n            code: \"exports.activate = \".concat(code),\n            scope: { channelId: channelId },\n        };\n        (_b = iframe.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage(message, \"*\");\n    });\n};\n\n/* eslint-disable no-console,@typescript-eslint/no-explicit-any,prefer-rest-params,@typescript-eslint/explicit-module-boundary-types */\nvar SandpackNode = /** @class */ (function (_super) {\n    __extends(SandpackNode, _super);\n    function SandpackNode(selector, sandboxInfo, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, selector, sandboxInfo, __assign(__assign({}, options), { bundlerURL: options.bundlerURL })) || this;\n        _this._modulesCache = new Map();\n        _this.messageChannelId = generateRandomId();\n        _this._initPromise = null;\n        _this.emitter = new EventEmitter();\n        // Assign iframes\n        _this.manageIframes(selector);\n        // Init emulator\n        _this.emulator = new Nodebox({\n            iframe: _this.emulatorIframe,\n            runtimeUrl: _this.options.bundlerURL,\n        });\n        // Trigger initial compile\n        _this.updateSandbox(sandboxInfo);\n        return _this;\n    }\n    // Initialize nodebox, should only ever be called once\n    SandpackNode.prototype._init = function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.emulator.connect()];\n                    case 1:\n                        _a.sent();\n                        // 2. Setup\n                        return [4 /*yield*/, this.emulator.fs.init(files)];\n                    case 2:\n                        // 2. Setup\n                        _a.sent();\n                        // 2.1 Other dependencies\n                        return [4 /*yield*/, this.globalListeners()];\n                    case 3:\n                        // 2.1 Other dependencies\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * It initializes the emulator and provide it with files, template and script to run\n     */\n    SandpackNode.prototype.compile = function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var shellId, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 5, , 6]);\n                        // 1. Init\n                        this.status = \"initializing\";\n                        this.dispatch({ type: \"start\", firstLoad: true });\n                        if (!this._initPromise) {\n                            this._initPromise = this._init(files);\n                        }\n                        return [4 /*yield*/, this._initPromise];\n                    case 1:\n                        _a.sent();\n                        this.dispatch({ type: \"connected\" });\n                        return [4 /*yield*/, this.createShellProcessFromTask(files)];\n                    case 2:\n                        shellId = (_a.sent()).id;\n                        // 4. Launch Preview\n                        return [4 /*yield*/, this.createPreviewURLFromId(shellId)];\n                    case 3:\n                        // 4. Launch Preview\n                        _a.sent();\n                        return [4 /*yield*/, this.setLocationURLIntoIFrame()];\n                    case 4:\n                        _a.sent();\n                        // 5. Returns to consumer\n                        this.dispatchDoneMessage();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        err_1 = _a.sent();\n                        this.dispatch({\n                            type: \"action\",\n                            action: \"notification\",\n                            notificationType: \"error\",\n                            title: getMessageFromError(err_1),\n                        });\n                        this.dispatch({ type: \"done\", compilatonError: true });\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * It creates a new shell and run the starting task\n     */\n    SandpackNode.prototype.createShellProcessFromTask = function (files) {\n        return __awaiter(this, void 0, void 0, function () {\n            var packageJsonContent;\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        packageJsonContent = readBuffer(files[\"/package.json\"]);\n                        this.emulatorCommand = findStartScriptPackageJson(packageJsonContent);\n                        this.emulatorShellProcess = this.emulator.shell.create();\n                        // Shell listeners\n                        return [4 /*yield*/, this.emulatorShellProcess.on(\"exit\", function (exitCode) {\n                                _this.dispatch({\n                                    type: \"action\",\n                                    action: \"notification\",\n                                    notificationType: \"error\",\n                                    title: createError(\"Error: process.exit(\".concat(exitCode, \") called.\")),\n                                });\n                            })];\n                    case 1:\n                        // Shell listeners\n                        _b.sent();\n                        return [4 /*yield*/, this.emulatorShellProcess.on(\"progress\", function (data) {\n                                var _a, _b;\n                                if (data.state === \"command_running\" ||\n                                    data.state === \"starting_command\") {\n                                    _this.dispatch({\n                                        type: \"shell/progress\",\n                                        data: __assign(__assign({}, data), { command: [\n                                                (_a = _this.emulatorCommand) === null || _a === void 0 ? void 0 : _a[0],\n                                                (_b = _this.emulatorCommand) === null || _b === void 0 ? void 0 : _b[1].join(\" \"),\n                                            ].join(\" \") }),\n                                    });\n                                    _this.status = \"installing-dependencies\";\n                                    return;\n                                }\n                                _this.dispatch({ type: \"shell/progress\", data: data });\n                            })];\n                    case 2:\n                        _b.sent();\n                        this.emulatorShellProcess.stdout.on(\"data\", function (data) {\n                            _this.dispatch({ type: \"stdout\", payload: { data: data, type: \"out\" } });\n                        });\n                        this.emulatorShellProcess.stderr.on(\"data\", function (data) {\n                            _this.dispatch({ type: \"stdout\", payload: { data: data, type: \"err\" } });\n                        });\n                        return [4 /*yield*/, (_a = this.emulatorShellProcess).runCommand.apply(_a, this.emulatorCommand)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                }\n            });\n        });\n    };\n    SandpackNode.prototype.createPreviewURLFromId = function (id) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var url;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.iframePreviewUrl = undefined;\n                        return [4 /*yield*/, this.emulator.preview.getByShellId(id)];\n                    case 1:\n                        url = (_b.sent()).url;\n                        this.iframePreviewUrl = url + ((_a = this.options.startRoute) !== null && _a !== void 0 ? _a : \"\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Nodebox needs to handle two types of iframes at the same time:\n     *\n     * 1. Runtime iframe: where the emulator process runs, which is responsible\n     *    for creating the other iframes (hidden);\n     * 2. Preview iframes: any other node process that contains a PORT (public);\n     */\n    SandpackNode.prototype.manageIframes = function (selector) {\n        var _a;\n        /**\n         * Pick the preview iframe\n         */\n        if (typeof selector === \"string\") {\n            var element = document.querySelector(selector);\n            nullthrows(element, \"The element '\".concat(selector, \"' was not found\"));\n            this.iframe = document.createElement(\"iframe\");\n        }\n        else {\n            this.iframe = selector;\n        }\n        // Set preview iframe styles\n        setPreviewIframeProperties(this.iframe, this.options);\n        nullthrows(this.iframe.parentNode, \"The given iframe does not have a parent.\");\n        /**\n         * Create the runtime iframe, which is hidden sibling\n         * from the preview one\n         */\n        this.emulatorIframe = document.createElement(\"iframe\");\n        this.emulatorIframe.classList.add(\"sp-bridge-frame\");\n        (_a = this.iframe.parentNode) === null || _a === void 0 ? void 0 : _a.appendChild(this.emulatorIframe);\n    };\n    SandpackNode.prototype.setLocationURLIntoIFrame = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.iframePreviewUrl) return [3 /*break*/, 2];\n                        return [4 /*yield*/, loadPreviewIframe(this.iframe, this.iframePreviewUrl)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send all messages and events to tell to the\n     * consumer that the bundler is ready without any error\n     */\n    SandpackNode.prototype.dispatchDoneMessage = function () {\n        this.status = \"done\";\n        this.dispatch({ type: \"done\", compilatonError: false });\n        if (this.iframePreviewUrl) {\n            this.dispatch({\n                type: \"urlchange\",\n                url: this.iframePreviewUrl,\n                back: false,\n                forward: false,\n            });\n        }\n    };\n    SandpackNode.prototype.globalListeners = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        window.addEventListener(\"message\", function (event) {\n                            if (event.data.type === PREVIEW_LOADED_MESSAGE_TYPE) {\n                                injectScriptToIframe(_this.iframe, _this.messageChannelId);\n                            }\n                            if (event.data.type === \"urlchange\" &&\n                                event.data.channelId === _this.messageChannelId) {\n                                _this.dispatch({\n                                    type: \"urlchange\",\n                                    url: event.data.url,\n                                    back: event.data.back,\n                                    forward: event.data.forward,\n                                });\n                            }\n                            else if (event.data.channelId === _this.messageChannelId) {\n                                _this.dispatch(event.data);\n                            }\n                        });\n                        return [4 /*yield*/, this.emulator.fs.watch([\"*\"], [\n                                \".next\",\n                                \"node_modules\",\n                                \"build\",\n                                \"dist\",\n                                \"vendor\",\n                                \".config\",\n                                \".vuepress\",\n                            ], function (message) { return __awaiter(_this, void 0, void 0, function () {\n                                var event, path, type, _a, content, newContent, err_2;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            if (!message)\n                                                return [2 /*return*/];\n                                            event = message;\n                                            path = \"newPath\" in event\n                                                ? event.newPath\n                                                : \"path\" in event\n                                                    ? event.path\n                                                    : \"\";\n                                            return [4 /*yield*/, this.emulator.fs.stat(path)];\n                                        case 1:\n                                            type = (_b.sent()).type;\n                                            if (type !== \"file\")\n                                                return [2 /*return*/, null];\n                                            _b.label = 2;\n                                        case 2:\n                                            _b.trys.push([2, 10, , 11]);\n                                            _a = event.type;\n                                            switch (_a) {\n                                                case \"change\": return [3 /*break*/, 3];\n                                                case \"create\": return [3 /*break*/, 3];\n                                                case \"remove\": return [3 /*break*/, 5];\n                                                case \"rename\": return [3 /*break*/, 6];\n                                                case \"close\": return [3 /*break*/, 8];\n                                            }\n                                            return [3 /*break*/, 9];\n                                        case 3: return [4 /*yield*/, this.emulator.fs.readFile(event.path, \"utf8\")];\n                                        case 4:\n                                            content = _b.sent();\n                                            this.dispatch({\n                                                type: \"fs/change\",\n                                                path: event.path,\n                                                content: content,\n                                            });\n                                            this._modulesCache.set(event.path, writeBuffer(content));\n                                            return [3 /*break*/, 9];\n                                        case 5:\n                                            this.dispatch({\n                                                type: \"fs/remove\",\n                                                path: event.path,\n                                            });\n                                            this._modulesCache.delete(event.path);\n                                            return [3 /*break*/, 9];\n                                        case 6:\n                                            this.dispatch({\n                                                type: \"fs/remove\",\n                                                path: event.oldPath,\n                                            });\n                                            this._modulesCache.delete(event.oldPath);\n                                            return [4 /*yield*/, this.emulator.fs.readFile(event.newPath, \"utf8\")];\n                                        case 7:\n                                            newContent = _b.sent();\n                                            this.dispatch({\n                                                type: \"fs/change\",\n                                                path: event.newPath,\n                                                content: newContent,\n                                            });\n                                            this._modulesCache.set(event.newPath, writeBuffer(newContent));\n                                            return [3 /*break*/, 9];\n                                        case 8: return [3 /*break*/, 9];\n                                        case 9: return [3 /*break*/, 11];\n                                        case 10:\n                                            err_2 = _b.sent();\n                                            this.dispatch({\n                                                type: \"action\",\n                                                action: \"notification\",\n                                                notificationType: \"error\",\n                                                title: getMessageFromError(err_2),\n                                            });\n                                            return [3 /*break*/, 11];\n                                        case 11: return [2 /*return*/];\n                                    }\n                                });\n                            }); })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * PUBLIC Methods\n     */\n    SandpackNode.prototype.restartShellProcess = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.emulatorShellProcess && this.emulatorCommand)) return [3 /*break*/, 3];\n                        // 1. Set the loading state and clean the URL\n                        this.dispatch({ type: \"start\", firstLoad: true });\n                        this.status = \"initializing\";\n                        // 2. Exit shell\n                        return [4 /*yield*/, this.emulatorShellProcess.kill()];\n                    case 1:\n                        // 2. Exit shell\n                        _b.sent();\n                        (_a = this.iframe) === null || _a === void 0 ? void 0 : _a.removeAttribute(\"attr\");\n                        this.emulator.fs.rm(\"/node_modules/.vite\", {\n                            recursive: true,\n                            force: true,\n                        });\n                        // 3 Run command again\n                        return [4 /*yield*/, this.compile(Object.fromEntries(this._modulesCache))];\n                    case 2:\n                        // 3 Run command again\n                        _b.sent();\n                        _b.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SandpackNode.prototype.updateSandbox = function (setup) {\n        var _this = this;\n        var _a;\n        var modules = fromBundlerFilesToFS(setup.files);\n        /**\n         * Update file changes\n         */\n        if (((_a = this.emulatorShellProcess) === null || _a === void 0 ? void 0 : _a.state) === \"running\") {\n            Object.entries(modules).forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (!_this._modulesCache.get(key) ||\n                    readBuffer(value) !== readBuffer(_this._modulesCache.get(key))) {\n                    _this.emulator.fs.writeFile(key, value, { recursive: true });\n                }\n            });\n            return;\n        }\n        /**\n         * Pass init files to the bundler\n         */\n        this.dispatch({\n            codesandbox: true,\n            modules: modules,\n            template: setup.template,\n            type: \"compile\",\n        });\n        /**\n         * Add modules to cache, this will ensure uniqueness changes\n         *\n         * Keep it after the compile action, in order to update the cache at the right moment\n         */\n        Object.entries(modules).forEach(function (_a) {\n            var key = _a[0], value = _a[1];\n            _this._modulesCache.set(key, writeBuffer(value));\n        });\n    };\n    SandpackNode.prototype.dispatch = function (message) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function () {\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _c = message.type;\n                        switch (_c) {\n                            case \"compile\": return [3 /*break*/, 1];\n                            case \"refresh\": return [3 /*break*/, 2];\n                            case \"urlback\": return [3 /*break*/, 4];\n                            case \"urlforward\": return [3 /*break*/, 4];\n                            case \"shell/restart\": return [3 /*break*/, 5];\n                            case \"shell/openPreview\": return [3 /*break*/, 6];\n                        }\n                        return [3 /*break*/, 7];\n                    case 1:\n                        this.compile(message.modules);\n                        return [3 /*break*/, 8];\n                    case 2: return [4 /*yield*/, this.setLocationURLIntoIFrame()];\n                    case 3:\n                        _d.sent();\n                        return [3 /*break*/, 8];\n                    case 4:\n                        (_b = (_a = this.iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage(message, \"*\");\n                        return [3 /*break*/, 8];\n                    case 5:\n                        this.restartShellProcess();\n                        return [3 /*break*/, 8];\n                    case 6:\n                        window.open(this.iframePreviewUrl, \"_blank\");\n                        return [3 /*break*/, 8];\n                    case 7:\n                        this.emitter.dispatch(message);\n                        _d.label = 8;\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SandpackNode.prototype.listen = function (listener) {\n        return this.emitter.listener(listener);\n    };\n    SandpackNode.prototype.destroy = function () {\n        this.emulatorIframe.remove();\n        this.emitter.cleanup();\n    };\n    return SandpackNode;\n}(SandpackClient));\n\nexport { SandpackNode };\n"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__commonJS","cb","mod","exports","__copyProps","to","from","except","desc","call","get","__toESM","isNodeMode","target","__esModule","__publicField","__accessCheck","member","msg","has","TypeError","__privateGet","getter","__privateAdd","WeakSet","add","set","__privateSet","setter","__privateMethod","method","require_pad","module","num","size","s","substr","length","require_fingerprint_browser","pad","globalCount","keys","window","self","clientId","mimeTypesLength","navigator","mimeTypes","userAgent","toString","require_getRandomValue_browser","getRandomValue","crypto","msCrypto","Math","abs","getRandomValues","Uint32Array","random","require_cuid","fingerprint","c","randomBlock","safeCounter","cuid3","letter","Date","getTime","slug","date","counter","slice","print","isCuid","stringToCheck","startsWith","isSlug","stringLength","require_createDeferredExecutor","createDeferredExecutor","executor","resolve","reject","state","result","data","Promise","then","queueMicrotask","rejectionReason","reason","require_DeferredPromise","DeferredPromise","createDeferredExecutor_1","DeferredPromise4","deferredExecutor","originalResolve","originalReject","onFulfilled","onRejected","decorate","catch","finally","onfinally","promise","defineProperties","require_build","__createBinding","o","m","k","k2","__exportStar","exports2","p","require_MemoryLeakError","MemoryLeakError","Error","emitter","type","count","name","require_Emitter","Emitter","_events","_maxListeners","_hasWarnedAboutPotentialMemortyLeak","_getListeners","getListeners_fn","_removeListener","removeListener_fn","_wrapOnceListener","wrapOnceListener_fn","_internalEmit","internalEmit_fn","MemoryLeakError_1","_Emitter","constructor","Map","defaultMaxListeners","listenerCount","eventName","setMaxListeners","maxListeners","getMaxListeners","eventNames","Array","emit","listeners","forEach","listener","apply","addListener","nextListeners","concat","memoryLeakWarning","console","warn","on","once","prependListener","prependOnceListener","removeListener","off","removeAllListeners","delete","clear","rawListeners","WeakMap","index","indexOf","splice","onceListener","internalEventName","require_lib","import_cuid","POSITIONALS_EXP","format","message","positionals","positionalIndex","formattedMessage","replace","match","isEscaped","_","flag","positional","serializePositional","Number","JSON","stringify","json","test","join","InvariantError","cleanErrorStack","error","stack","nextStack","split","invariant","predicate","as","ErrorConstructor","isConstructor","import_deferred_promise","FLAG","localStorage","CYAN","COLOR_SCOPE","preview","emulator","runtime","bridge","createDebug","scope","cleanMessage","debug","includes","MessageSender","EventTarget","channel","MessageChannel","receiverPort","port1","receiverReadyPromise","handshakeListener","addEventListener","removeEventListener","onmessage","evt","payload","dispatchEvent","MessageEvent","handshake","handshakePromise","postMessage","port2","clearTimeout","rejectionTimeout","setTimeout","event","options","send","operationPromise","operationId","default","handleOperationDone","data2","doneEvent","listenerPayload","handleOperationFailed","failEvent","import_deferred_promise3","import_cuid2","FileSystemApi","init","files","readFile","path","encoding","response","cause","writeFile","content","recursive","readdir","mkdir","stat","rm","force","watch","excludes","watcherId","dispose","import_strict_event_emitter","ShellApi","ShellProcess","stdout","stderr","stdin","write","id","workerId","forwardStdEvents","runCommand","command","args","shellInfo","status","exitCode","kill","import_deferred_promise2","PreviewApi","waitFor","timeout","readyPromise","rejectTimeout","previewInformation","sourceShellId","port","foundPreview","url","getByShellId","waitForPort","debug2","Nodebox","iframe","runtimeUrl","isConnected","fileSystemApi","shellApi","previewApi","connect","cdnUrl","connectionPromise","contentWindow","frameLoadPromise","setAttribute","fs","shell","setPreviewIframeProperties","style","border","width","height","overflow","allow","scripts","code","setupHistoryListeners","_a","origHistoryProto","history","__proto__","historyList","historyPosition","dispatchMessage","parent","back","forward","channelId","assign","go","delta","newPos","replaceState","document","location","href","PopStateEvent","pushState","title","push","reload","consoleHook_cdbe54ab","watchResize","throttle","lastHeight","sendResizeEvent","getDocumentHeight","body","html","documentElement","max","scrollHeight","offsetHeight","codesandbox","observer","MutationObserver","undefined","observe","attributes","childList","subtree","setInterval","injectScriptToIframe","_b","uid","SandpackNode","_super","selector","sandboxInfo","_this","types_0877c553","h","bundlerURL","_modulesCache","messageChannelId","g","_initPromise","E","manageIframes","emulatorIframe","updateSandbox","_init","a","label","sent","globalListeners","compile","shellId","err_1","trys","dispatch","firstLoad","createShellProcessFromTask","createPreviewURLFromId","setLocationURLIntoIFrame","dispatchDoneMessage","action","notificationType","compilatonError","packageJsonContent","r","emulatorCommand","b","emulatorShellProcess","iframePreviewUrl","startRoute","element","querySelector","n","createElement","parentNode","classList","appendChild","loadPreviewIframe","tries","triesToSetUrl","onLoadPage","newContent","err_2","newPath","w","oldPath","restartShellProcess","removeAttribute","fromEntries","setup","modules","f","entries","template","_d","open","listen","destroy","remove","cleanup","base_80a1f760","S"],"sourceRoot":""}